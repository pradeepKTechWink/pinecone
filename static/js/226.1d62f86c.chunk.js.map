{"version":3,"file":"static/js/226.1d62f86c.chunk.js","mappings":"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","sources":["app/modules/accounts/components/settings/cards/ProfileDetails.tsx","app/modules/accounts/components/settings/SettingsModel.ts","app/modules/accounts/components/settings/cards/SignInMethod.tsx","app/modules/accounts/components/settings/Settings.tsx","app/modules/accounts/AccountPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {KTIcon, toAbsoluteUrl} from '../../../../../../_metronic/helpers'\r\nimport {updateUserProfile} from '../../../../auth/core/_requests'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport { useAuth } from '../../../../auth/'\r\nimport clsx from 'clsx'\r\nimport { IProfileDetails } from '../SettingsModel'\r\nimport { AlertSuccess, AlertDanger } from '../../../../alerts/Alerts'\r\n\r\n\r\nconst profileDetailsSchema = Yup.object().shape({\r\n  firstname: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('First Name is required'),\r\n  lastname: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Last Name is required'),\r\n  mobileNumber: Yup.string()\r\n    .min(14, 'Minimum 10 numbers')\r\n    .max(14, 'Maximum 10 numbers')\r\n    .required('Mobile number is required')\r\n})\r\n\r\nconst ProfileDetails: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const { currentUser, auth, setCurrentUser, saveAuth } = useAuth()\r\n  const [image, setImage] = useState<any>(\"\")\r\n  const [userId] = useState(currentUser?.id)\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\")\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\")\r\n  const [compPhoneNumb, setCompPhoneNumb] = useState<any>(currentUser?.phoneNumber)\r\n  const [userMobNumb, setUserMobNumb] = useState<any>(currentUser?.mobileNumber)\r\n\r\n  if(successMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(errorMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const handleImageChange = (e: any) => {\r\n    setImage(e.target.files[0])\r\n  }\r\n\r\n  const isOtherOrgType = (type: string | undefined) => {\r\n    if(!type) return false\r\n    if(type == 'Management Company' || type == 'Self Managed Community') return false\r\n    return true\r\n  }\r\n\r\n  const [isOtherSelected, setIsOtherSelected] = useState<boolean>(isOtherOrgType(currentUser?.orgType))\r\n  const [orgType, setOrgType] = useState<string | undefined>(currentUser?.orgType)\r\n\r\n  const initialValues: any = {\r\n    firstname: currentUser?.firstname,\r\n    lastname: currentUser?.lastname,\r\n    mobileNumber: currentUser?.mobileNumber,\r\n  }\r\n\r\n  const formik = useFormik<any>({\r\n    initialValues,\r\n    validationSchema: profileDetailsSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        const formData = new FormData()\r\n\r\n        console.log(values.firstname)\r\n        formData.append('userId', userId ? userId.toString() : '') \r\n        formData.append('firstname', values.firstname)\r\n        formData.append('lastname', values.lastname)\r\n        formData.append('mobileNumber', values.mobileNumber)\r\n        formData.append('image', image)\r\n\r\n        updateUserProfile(formData)\r\n        .then((response) => {\r\n          if(response.data.success) {\r\n            setCurrentUser((user) => {\r\n                let updatedData = user\r\n                updatedData = {...updatedData, ...response.data.userData}\r\n                \r\n                let newAuth = auth\r\n                if(newAuth && newAuth.user) {\r\n                    newAuth.user = updatedData\r\n                }\r\n                saveAuth(newAuth)\r\n                \r\n                return updatedData\r\n            })\r\n            setChecked(true)\r\n            setSuccessMessage(response.data.message)\r\n            setLoading(false)\r\n            window.scrollTo(0,0)\r\n          } else {\r\n              setChecked(true)\r\n              setErrorMessage(response.data.message)\r\n              setLoading(false)\r\n              window.scrollTo(0,0)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setChecked(true)\r\n          setErrorMessage('Failed to update user profile details')\r\n          setLoading(false)\r\n          window.scrollTo(0,0)\r\n        })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    formik.setFieldValue('mobileNumber', userMobNumb)\r\n  }, [userMobNumb])\r\n\r\n\r\n  const handlePhoneNumberChange = (e: any, numbertype: 'Company' | 'Mobile') => {\r\n    if(numbertype == 'Company') {\r\n      // this is where we'll call our future formatPhoneNumber function that we haven't written yet.\r\n      const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n      // we'll set the input value using our setInputValue\r\n      setCompPhoneNumb(formattedPhoneNumber);\r\n    } else {\r\n      // this is where we'll call our future formatPhoneNumber function that we haven't written yet.\r\n      const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n      // we'll set the input value using our setInputValue\r\n      setUserMobNumb(formattedPhoneNumber);\r\n    }\r\n  }\r\n\r\n  const formatPhoneNumber = (value: string) => {\r\n    // if input value is falsy eg if the user deletes the input, then just return\r\n    if (!value) return value;\r\n  \r\n    // clean the input for any non-digit values.\r\n    const phoneNumber = value.replace(/[^\\d]/g, '');\r\n  \r\n    // phoneNumberLength is used to know when to apply our formatting for the phone number\r\n    const phoneNumberLength = phoneNumber.length;\r\n  \r\n    // we need to return the value with no formatting if its less then four digits\r\n    // this is to avoid weird behavior that occurs if you  format the area code to early\r\n  \r\n    if (phoneNumberLength < 4) return phoneNumber;\r\n  \r\n    // if phoneNumberLength is greater than 4 and less the 7 we start to return\r\n    // the formatted number\r\n    if (phoneNumberLength < 7) {\r\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n    }\r\n  \r\n    // finally, if the phoneNumberLength is greater then seven, we add the last\r\n    // bit of formatting and return it.\r\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\r\n      3,\r\n      6\r\n    )}-${phoneNumber.slice(6, 10)}`;\r\n  }\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_profile_details'\r\n        aria-expanded='true'\r\n        aria-controls='kt_account_profile_details'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'>User Profile Details</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {successMessage !== \"\" ? (\r\n        <AlertSuccess message={successMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      {errorMessage !== \"\" ? (\r\n        <AlertDanger message={errorMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      <div id='kt_account_profile_details' className='collapse show'>\r\n        <form onSubmit={formik.handleSubmit} noValidate className='form'>\r\n          <div className='card-body border-top p-9'>\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>Avatar</label>\r\n              <div className='col-lg-8'>\r\n                <div\r\n                  className='image-input image-input-outline'\r\n                  data-kt-image-input='true'\r\n                  style={{backgroundImage: `url(${toAbsoluteUrl('/media/avatars/blank.png')})`}}\r\n                >\r\n                  {image == \"\" ? (\r\n                    <div>\r\n                      <img src={`${process.env.REACT_APP_API_USER_IMAGE_URL}/${auth?.user?.avatarName}`} className='w-200px mb-3' />\r\n                    </div>\r\n                  ): (\r\n                    <div>\r\n                      <img src={URL.createObjectURL(image)} className='w-200px mb-3' />\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                    <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg, image/jpg\" onChange={(e) => handleImageChange(e)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label required fw-bold fs-6'>Full Name</label>\r\n\r\n              <div className='col-lg-8'>\r\n                <div className='row'>\r\n                  <div className='col-lg-6 fv-row'>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control form-control-lg form-control-solid mb-3 mb-lg-0'\r\n                      placeholder='First Name'\r\n                      {...formik.getFieldProps('firstname')}\r\n                    />\r\n                    {formik.touched.firstname && formik.errors.firstname && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'><>{formik.errors.firstname}</></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className='col-lg-6 fv-row'>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control form-control-lg form-control-solid'\r\n                      placeholder='Last name'\r\n                      {...formik.getFieldProps('lastname')}\r\n                    />\r\n                    {formik.touched.lastname && formik.errors.lastname && (\r\n                      <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'><>{formik.errors.lastname}</></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                <span className='required'>Mobile Number</span>\r\n              </label>\r\n\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  placeholder='Mobile number'\r\n                  {...formik.getFieldProps('mobileNumber')}\r\n                  onChange={(e) => handlePhoneNumberChange(e, 'Mobile')}\r\n                />\r\n                {formik.touched.mobileNumber && formik.errors.mobileNumber && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'><>{formik.errors.mobileNumber}</></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='card-footer d-flex justify-content-end py-6 px-9'>\r\n            <button type='submit' className='btn btn-primary' disabled={loading}>\r\n              {!loading && 'Save Changes'}\r\n              {loading && (\r\n                <span className='indicator-progress' style={{display: 'block'}}>\r\n                  Please wait...{' '}\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ProfileDetails}\r\n","export interface IProfileDetails {\r\n  id?: number\r\n  firstname?: string\r\n  lastname?: string\r\n  phoneNumber?: string\r\n  companyName?: string\r\n  orgType?: string\r\n  mailingAddStreetName?: string\r\n  mailingAddCityName?: string\r\n  mailingAddStateName?: string\r\n  mailingAddZip?: string\r\n  billingAddStreetName?: string\r\n  billingAddCityName?: string\r\n  billingAddStateName?: string\r\n  billingAddZip?: string\r\n  avatarName?: string\r\n}\r\n\r\nexport interface IUpdateEmail {\r\n  newEmail: string\r\n  confirmPassword: string\r\n}\r\n\r\nexport interface IUpdatePassword {\r\n  currentPassword: string\r\n  newPassword: string\r\n  passwordConfirmation: string\r\n}\r\n\r\nexport interface IConnectedAccounts {\r\n  google: boolean\r\n  github: boolean\r\n  stack: boolean\r\n}\r\n\r\nexport interface IEmailPreferences {\r\n  successfulPayments: boolean\r\n  payouts: boolean\r\n  freeCollections: boolean\r\n  customerPaymentDispute: boolean\r\n  refundAlert: boolean\r\n  invoicePayments: boolean\r\n  webhookAPIEndpoints: boolean\r\n}\r\n\r\nexport interface INotifications {\r\n  notifications: {\r\n    email: boolean\r\n    phone: boolean\r\n  }\r\n  billingUpdates: {\r\n    email: boolean\r\n    phone: boolean\r\n  }\r\n  newTeamMembers: {\r\n    email: boolean\r\n    phone: boolean\r\n  }\r\n  completeProjects: {\r\n    email: boolean\r\n    phone: boolean\r\n  }\r\n  newsletters: {\r\n    email: boolean\r\n    phone: boolean\r\n  }\r\n}\r\n\r\nexport interface IDeactivateAccount {\r\n  confirm: boolean\r\n}\r\n\r\n\r\nexport const updateEmail: IUpdateEmail = {\r\n  newEmail: '',\r\n  confirmPassword: '',\r\n}\r\n\r\nexport const updatePassword: IUpdatePassword = {\r\n  currentPassword: '',\r\n  newPassword: '',\r\n  passwordConfirmation: '',\r\n}\r\n\r\nexport const connectedAccounts: IConnectedAccounts = {\r\n  google: true,\r\n  github: true,\r\n  stack: false,\r\n}\r\n\r\nexport const emailPreferences: IEmailPreferences = {\r\n  successfulPayments: false,\r\n  payouts: true,\r\n  freeCollections: false,\r\n  customerPaymentDispute: true,\r\n  refundAlert: false,\r\n  invoicePayments: true,\r\n  webhookAPIEndpoints: false,\r\n}\r\n\r\nexport const notifications: INotifications = {\r\n  notifications: {\r\n    email: true,\r\n    phone: true,\r\n  },\r\n  billingUpdates: {\r\n    email: true,\r\n    phone: true,\r\n  },\r\n  newTeamMembers: {\r\n    email: true,\r\n    phone: false,\r\n  },\r\n  completeProjects: {\r\n    email: false,\r\n    phone: true,\r\n  },\r\n  newsletters: {\r\n    email: false,\r\n    phone: false,\r\n  },\r\n}\r\n\r\nexport const deactivateAccount: IDeactivateAccount = {\r\n  confirm: false,\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from 'react'\r\nimport {KTIcon} from '../../../../../../_metronic/helpers'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport {IUpdateEmail, IUpdatePassword, updateEmail, updatePassword} from '../SettingsModel'\r\nimport { changeCurrentPassword, updateEmailAddress, enable2FA, disable2FA } from '../../../../auth/core/_requests'\r\nimport { useAuth } from '../../../../auth'\r\nimport { AlertDanger, AlertSuccess } from '../../../../alerts/Alerts'\r\n\r\nconst emailFormValidationSchema = Yup.object().shape({\r\n  newEmail: Yup.string()\r\n    .email('Wrong email format')\r\n    .min(5, 'Minimum 5 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Email is required'),\r\n  confirmPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Password is required'),\r\n})\r\n\r\nconst passwordFormValidationSchema = Yup.object().shape({\r\n  currentPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Password is required'),\r\n  newPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Password is required'),\r\n  passwordConfirmation: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Password is required')\r\n    .oneOf([Yup.ref('newPassword')], 'Passwords must match'),\r\n})\r\n\r\nconst SignInMethod: React.FC = () => {\r\n  const [emailUpdateData, setEmailUpdateData] = useState<IUpdateEmail>(updateEmail)\r\n  const [passwordUpdateData, setPasswordUpdateData] = useState<IUpdatePassword>(updatePassword)\r\n  const { currentUser, setCurrentUser, saveAuth, auth } = useAuth()\r\n\r\n  const [showEmailForm, setShowEmailForm] = useState<boolean>(false)\r\n  const [showPasswordForm, setPasswordForm] = useState<boolean>(false)\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n  const [checked1, setChecked1] = useState<boolean>(true)\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\")\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\")\r\n\r\n  let responseSuccessMessage = localStorage.getItem(\"responsesuccessmsg\");\r\n  let responseFailureMessage = localStorage.getItem(\"responsefailuresmsg\")\r\n\r\n  const [resSuccessMessage, setResSuccessMessage] = useState(responseSuccessMessage);\r\n  const [resFailureMessage, setResFailureMessage] = useState(responseFailureMessage);\r\n\r\n  if(successMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(errorMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(responseSuccessMessage) {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"responsesuccessmsg\");\r\n      setChecked1(false);\r\n      setTimeout(() => {\r\n        setResSuccessMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  if(responseFailureMessage) {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"responsefailuresmsg\");\r\n      setChecked1(false);\r\n      setTimeout(() => {\r\n        setResFailureMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  const [loading1, setLoading1] = useState(false)\r\n\r\n  const formik1 = useFormik<IUpdateEmail>({\r\n    initialValues: {\r\n      ...emailUpdateData,\r\n    },\r\n    validationSchema: emailFormValidationSchema,\r\n    onSubmit: (values) => {\r\n      setLoading1(true)\r\n      setTimeout(() => {\r\n        updateEmailAddress(currentUser?.id, values.newEmail, values.confirmPassword)\r\n        .then((response) => {\r\n          if(response.data.success) {\r\n              setCurrentUser((user) => {\r\n                const updatedUser = user\r\n                if(updatedUser) {\r\n                    updatedUser.accountStatus = response.data.accountStatus\r\n                    updatedUser.email = response.data.email\r\n                    updatedUser.twoFactorAuth = false\r\n                }\r\n\r\n                let newAuth = auth\r\n                if(newAuth && newAuth.user) {\r\n                    newAuth.user = updatedUser\r\n                }\r\n                saveAuth(newAuth)\r\n                \r\n                return updatedUser\r\n            })\r\n            localStorage.setItem('responsesuccessmsg', response.data.message)\r\n            window.location.reload();\r\n          } else {\r\n            setChecked(true)\r\n            setErrorMessage(response.data.message)\r\n            setLoading1(false)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setChecked(true)\r\n          setErrorMessage('Failed to update email')\r\n          setLoading1(false)\r\n        })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  const [loading2, setLoading2] = useState(false)\r\n\r\n  const formik2 = useFormik<IUpdatePassword>({\r\n    initialValues: {\r\n      ...passwordUpdateData,\r\n    },\r\n    validationSchema: passwordFormValidationSchema,\r\n    onSubmit: (values) => {\r\n      setLoading2(true)\r\n      setTimeout(() => {\r\n        changeCurrentPassword(currentUser?.id, values.currentPassword, values.newPassword)\r\n        .then((res) => {\r\n          if(res.data.success) {\r\n            setPasswordUpdateData(updatePassword)\r\n            setChecked(true)\r\n            setSuccessMessage(res.data.message)\r\n          } else {\r\n            setChecked(true)\r\n            setErrorMessage(res.data.message)\r\n          }\r\n          setLoading2(false)\r\n          setPasswordForm(false)\r\n        })\r\n        .catch((err) => {\r\n          setChecked(true)\r\n          setErrorMessage('Failed to update password')\r\n          setLoading2(false)\r\n          setPasswordForm(false)\r\n        })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  const enableTwoFactorAuth = () => {\r\n    enable2FA(currentUser?.id)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        setCurrentUser((user) => {\r\n          const updatedUser = user\r\n          if(updatedUser) {\r\n              updatedUser.twoFactorAuth = true\r\n          }\r\n  \r\n          let newAuth = auth\r\n          if(newAuth && newAuth.user) {\r\n              newAuth.user = updatedUser\r\n          }\r\n          saveAuth(newAuth)\r\n          \r\n          return updatedUser\r\n        })\r\n        setChecked(true)\r\n        setSuccessMessage(response.data.message)\r\n      } else {\r\n        setChecked(true)\r\n        setErrorMessage(response.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const disableTwoFactorAuth = () => {\r\n    disable2FA(currentUser?.id)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        setCurrentUser((user) => {\r\n          const updatedUser = user\r\n          if(updatedUser) {\r\n              updatedUser.twoFactorAuth = false\r\n          }\r\n  \r\n          let newAuth = auth\r\n          if(newAuth && newAuth.user) {\r\n              newAuth.user = updatedUser\r\n          }\r\n          saveAuth(newAuth)\r\n          \r\n          return updatedUser\r\n        })\r\n        setChecked(true)\r\n        setSuccessMessage(response.data.message)\r\n      } else {\r\n        setChecked(true)\r\n        setErrorMessage(response.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_signin_method'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'>Sign-in Method</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {successMessage !== \"\" ? (\r\n        <AlertSuccess message={successMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      {errorMessage !== \"\" ? (\r\n        <AlertDanger message={errorMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      {resSuccessMessage !== null && resSuccessMessage !== undefined && resSuccessMessage !== \"\"  ? (\r\n        <AlertSuccess message={resSuccessMessage} checked={checked1} />\r\n      ) : null}\r\n\r\n      {resFailureMessage !== null && resFailureMessage !== undefined && resFailureMessage !== \"\"  ? (\r\n          <AlertDanger message={resFailureMessage} checked={checked1} />\r\n        ) : null}\r\n\r\n      <div id='kt_account_signin_method' className='collapse show'>\r\n        <div className='card-body border-top p-9'>\r\n          <div className='d-flex flex-wrap align-items-center'>\r\n            <div id='kt_signin_email' className={' ' + (showEmailForm && 'd-none')}>\r\n              <div className='fs-6 fw-bolder mb-1'>Email Address</div>\r\n              <div className='fw-bold text-gray-600'>{currentUser?.email}</div>\r\n            </div>\r\n\r\n            <div\r\n              id='kt_signin_email_edit'\r\n              className={'flex-row-fluid ' + (!showEmailForm && 'd-none')}\r\n            >\r\n              <form\r\n                onSubmit={formik1.handleSubmit}\r\n                id='kt_signin_change_email'\r\n                className='form'\r\n                noValidate\r\n              >\r\n                <div className='row mb-6'>\r\n                  <div className='col-lg-6 mb-4 mb-lg-0'>\r\n                    <div className='fv-row mb-0'>\r\n                      <label htmlFor='emailaddress' className='form-label fs-6 fw-bolder mb-3'>\r\n                        Enter New Email Address\r\n                      </label>\r\n                      <input\r\n                        type='email'\r\n                        className='form-control form-control-lg form-control-solid'\r\n                        id='emailaddress'\r\n                        placeholder='Email Address'\r\n                        {...formik1.getFieldProps('newEmail')}\r\n                      />\r\n                      {formik1.touched.newEmail && formik1.errors.newEmail && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>{formik1.errors.newEmail}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-lg-6'>\r\n                    <div className='fv-row mb-0'>\r\n                      <label\r\n                        htmlFor='confirmemailpassword'\r\n                        className='form-label fs-6 fw-bolder mb-3'\r\n                      >\r\n                        Confirm Password\r\n                      </label>\r\n                      <input\r\n                        type='password'\r\n                        className='form-control form-control-lg form-control-solid'\r\n                        id='confirmemailpassword'\r\n                        {...formik1.getFieldProps('confirmPassword')}\r\n                      />\r\n                      {formik1.touched.confirmPassword && formik1.errors.confirmPassword && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>{formik1.errors.confirmPassword}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='d-flex'>\r\n                  <button\r\n                    id='kt_signin_submit'\r\n                    type='submit'\r\n                    className='btn btn-primary  me-2 px-6'\r\n                  >\r\n                    {!loading1 && 'Update Email'}\r\n                    {loading1 && (\r\n                      <span className='indicator-progress' style={{display: 'block'}}>\r\n                        Please wait...{' '}\r\n                        <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                      </span>\r\n                    )}\r\n                  </button>\r\n                  <button\r\n                    id='kt_signin_cancel'\r\n                    type='button'\r\n                    onClick={() => {\r\n                      setShowEmailForm(false)\r\n                    }}\r\n                    className='btn btn-color-gray-400 btn-active-light-primary px-6'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n            <div id='kt_signin_email_button' className={'ms-auto ' + (showEmailForm && 'd-none')}>\r\n              <button\r\n                onClick={() => {\r\n                  setShowEmailForm(true)\r\n                }}\r\n                className='btn btn-light btn-active-light-primary'\r\n              >\r\n                Change Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='separator separator-dashed my-6'></div>\r\n\r\n          <div className='d-flex flex-wrap align-items-center mb-10'>\r\n            <div id='kt_signin_password' className={' ' + (showPasswordForm && 'd-none')}>\r\n              <div className='fs-6 fw-bolder mb-1'>Password</div>\r\n              <div className='fw-bold text-gray-600'>************</div>\r\n            </div>\r\n\r\n            <div\r\n              id='kt_signin_password_edit'\r\n              className={'flex-row-fluid ' + (!showPasswordForm && 'd-none')}\r\n            >\r\n              <form\r\n                onSubmit={formik2.handleSubmit}\r\n                id='kt_signin_change_password'\r\n                className='form'\r\n                noValidate\r\n              >\r\n                <div className='row mb-1'>\r\n                  <div className='col-lg-4'>\r\n                    <div className='fv-row mb-0'>\r\n                      <label htmlFor='currentpassword' className='form-label fs-6 fw-bolder mb-3'>\r\n                        Current Password\r\n                      </label>\r\n                      <input\r\n                        type='password'\r\n                        className='form-control form-control-lg form-control-solid '\r\n                        id='currentpassword'\r\n                        {...formik2.getFieldProps('currentPassword')}\r\n                      />\r\n                      {formik2.touched.currentPassword && formik2.errors.currentPassword && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>{formik2.errors.currentPassword}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-lg-4'>\r\n                    <div className='fv-row mb-0'>\r\n                      <label htmlFor='newpassword' className='form-label fs-6 fw-bolder mb-3'>\r\n                        New Password\r\n                      </label>\r\n                      <input\r\n                        type='password'\r\n                        className='form-control form-control-lg form-control-solid '\r\n                        id='newpassword'\r\n                        {...formik2.getFieldProps('newPassword')}\r\n                      />\r\n                      {formik2.touched.newPassword && formik2.errors.newPassword && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>{formik2.errors.newPassword}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-lg-4'>\r\n                    <div className='fv-row mb-0'>\r\n                      <label htmlFor='confirmpassword' className='form-label fs-6 fw-bolder mb-3'>\r\n                        Confirm New Password\r\n                      </label>\r\n                      <input\r\n                        type='password'\r\n                        className='form-control form-control-lg form-control-solid '\r\n                        id='confirmpassword'\r\n                        {...formik2.getFieldProps('passwordConfirmation')}\r\n                      />\r\n                      {formik2.touched.passwordConfirmation && formik2.errors.passwordConfirmation && (\r\n                        <div className='fv-plugins-message-container'>\r\n                          <div className='fv-help-block'>{formik2.errors.passwordConfirmation}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='form-text mb-5'>\r\n                  Password must be at least 8 character and contain symbols\r\n                </div>\r\n\r\n                <div className='d-flex'>\r\n                  <button\r\n                    id='kt_password_submit'\r\n                    type='submit'\r\n                    className='btn btn-primary me-2 px-6'\r\n                  >\r\n                    {!loading2 && 'Update Password'}\r\n                    {loading2 && (\r\n                      <span className='indicator-progress' style={{display: 'block'}}>\r\n                        Please wait...{' '}\r\n                        <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                      </span>\r\n                    )}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setPasswordForm(false)\r\n                    }}\r\n                    id='kt_password_cancel'\r\n                    type='button'\r\n                    className='btn btn-color-gray-400 btn-active-light-primary px-6'\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n            <div\r\n              id='kt_signin_password_button'\r\n              className={'ms-auto ' + (showPasswordForm && 'd-none')}\r\n            >\r\n              <button\r\n                onClick={() => {\r\n                  setPasswordForm(true)\r\n                }}\r\n                className='btn btn-light btn-active-light-primary'\r\n              >\r\n                Reset Password\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='notice d-flex bg-light-primary rounded border-primary border border-dashed p-6'>\r\n            <KTIcon iconName='shield-tick' className='fs-2tx text-primary me-4' />\r\n            <div className='d-flex flex-stack flex-grow-1 flex-wrap flex-md-nowrap'>\r\n              <div className='mb-3 mb-md-0 fw-bold'>\r\n                <h4 className='text-gray-800 fw-bolder'>Secure Your Account</h4>\r\n                <div className='fs-6 text-gray-600 pe-7'>\r\n                  Two-factor authentication adds an extra layer of security to your account. To log\r\n                  in, in addition you'll need to provide a 4 digit code\r\n                </div>\r\n              </div>\r\n              {currentUser?.twoFactorAuth && \r\n                <button\r\n                  onClick={() => disableTwoFactorAuth()}\r\n                  className='btn btn-light btn-active-light-primary'\r\n                >\r\n                  Disable\r\n                </button>\r\n              }\r\n              {!currentUser?.twoFactorAuth &&\r\n                <button\r\n                  className='btn btn-primary me-2 px-6'\r\n                  onClick={() => enableTwoFactorAuth()}\r\n                  disabled={!currentUser?.accountStatus}\r\n                >\r\n                  Enable\r\n                </button>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {SignInMethod}\r\n","import React from 'react'\r\nimport {ProfileDetails} from './cards/ProfileDetails'\r\nimport {SignInMethod} from './cards/SignInMethod'\r\n\r\nexport function Settings() {\r\n  return (\r\n    <>\r\n      <ProfileDetails />\r\n      <SignInMethod />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {Overview} from './components/Overview'\r\nimport {Settings} from './components/settings/Settings'\r\nimport {AccountHeader} from './AccountHeader'\r\n\r\n\r\nconst AccountPage: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        element={\r\n          <>\r\n            <Outlet />\r\n          </>\r\n        }\r\n      >\r\n        <Route\r\n          path='profile'\r\n          element={\r\n            <>\r\n              <Settings />\r\n            </>\r\n          }\r\n        />\r\n        <Route index element={<Navigate to='/user/profile' />} />\r\n      </Route>\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n"],"names":["profileDetailsSchema","Yup","shape","firstname","min","max","required","lastname","mobileNumber","ProfileDetails","useState","loading","setLoading","useAuth","currentUser","auth","setCurrentUser","saveAuth","image","setImage","id","userId","checked","setChecked","successMessage","setSuccessMessage","errorMessage","setErrorMessage","phoneNumber","setCompPhoneNumb","userMobNumb","setUserMobNumb","setTimeout","type","orgType","initialValues","formik","useFormik","validationSchema","onSubmit","values","formData","FormData","console","log","append","toString","updateUserProfile","then","response","data","success","user","updatedData","userData","newAuth","message","window","scrollTo","catch","err","useEffect","setFieldValue","formatPhoneNumber","value","replace","phoneNumberLength","length","slice","className","role","handleSubmit","noValidate","style","backgroundImage","toAbsoluteUrl","src","process","avatarName","URL","createObjectURL","accept","onChange","e","target","files","handleImageChange","placeholder","getFieldProps","touched","errors","numbertype","formattedPhoneNumber","handlePhoneNumberChange","disabled","display","updateEmail","newEmail","confirmPassword","updatePassword","currentPassword","newPassword","passwordConfirmation","emailFormValidationSchema","email","passwordFormValidationSchema","oneOf","SignInMethod","emailUpdateData","passwordUpdateData","setPasswordUpdateData","showEmailForm","setShowEmailForm","showPasswordForm","setPasswordForm","checked1","setChecked1","responseSuccessMessage","localStorage","getItem","responseFailureMessage","resSuccessMessage","setResSuccessMessage","resFailureMessage","setResFailureMessage","removeItem","loading1","setLoading1","formik1","updateEmailAddress","updatedUser","accountStatus","twoFactorAuth","setItem","location","reload","loading2","setLoading2","formik2","changeCurrentPassword","res","undefined","htmlFor","onClick","iconName","disable2FA","enable2FA","Settings","element","path","index","to"],"sourceRoot":""}