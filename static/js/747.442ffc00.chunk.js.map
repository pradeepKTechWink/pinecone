{"version":3,"file":"static/js/747.442ffc00.chunk.js","mappings":"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","sources":["app/modules/company/components/CompanyProfile.tsx","app/modules/company/components/ApplicationUsage.tsx","app/modules/company/components/TwoFactorAuth.tsx","app/modules/company/ProfileComponents.tsx","app/modules/company/CompanyProfilePage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {KTIcon, toAbsoluteUrl} from '../../../../_metronic/helpers'\r\nimport {updateCompanyProfile} from '../../auth/core/_requests'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport { useAuth } from '../../auth/'\r\nimport clsx from 'clsx'\r\nimport { AlertSuccess, AlertDanger } from '../../alerts/Alerts'\r\n\r\n\r\nconst profileDetailsSchema = Yup.object().shape({\r\n  phoneNumber: Yup.string()\r\n    .min(14, 'Minimum 10 numbers')\r\n    .max(14, 'Maximum 10 numbers')\r\n    .required('Company phone number is required'),\r\n  companyName: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Company name is required'),\r\n  orgType: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Organization type is required'),\r\n  mailingAddStreetName: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Street name/number is required'),\r\n  mailingAddCityName: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('City is required'),\r\n  mailingAddStateName: Yup.string()\r\n    .min(2, 'Minimum 2 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('State is required'),\r\n  mailingAddZip: Yup.string()\r\n    .min(5, 'Minimum 5 numbers')\r\n    .max(5, 'Maximum 5 numbers')\r\n    .required('Zip code is required'),\r\n  billingAddStreetName: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('Street name/number is required'),\r\n  billingAddCityName: Yup.string()\r\n    .min(3, 'Minimum 3 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('City is required'),\r\n  billingAddStateName: Yup.string()\r\n    .min(2, 'Minimum 2 characters')\r\n    .max(50, 'Maximum 50 characters')\r\n    .required('State is required'),\r\n  billingAddZip: Yup.string()\r\n    .min(5, 'Minimum 5 numbers')\r\n    .max(5, 'Maximum 5 numbers')\r\n    .required('Zip code is required'),\r\n})\r\n\r\nconst CompanyProfile: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const { currentUser, auth, setCurrentUser, saveAuth } = useAuth()\r\n  const [image, setImage] = useState<any>(\"\")\r\n  const [userId] = useState(currentUser?.id)\r\n  const [companyId] = useState(currentUser?.companyId)\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\")\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\")\r\n  const [compPhoneNumb, setCompPhoneNumb] = useState<any>(currentUser?.phoneNumber)\r\n  const [userMobNumb, setUserMobNumb] = useState<any>(currentUser?.mobileNumber)\r\n\r\n  const [checkboxTick, setCheckboxTick] = useState<any>(currentUser?.isMailAndBillAddressSame)\r\n\r\n  if(successMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(errorMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const handleImageChange = (e: any) => {\r\n    setImage(e.target.files[0])\r\n  }\r\n\r\n  const isOtherOrgType = (type: string | undefined) => {\r\n    if(!type) return false\r\n    if(type == 'Management Company' || type == 'Self Managed Community') return false\r\n    return true\r\n  }\r\n\r\n  const [isOtherSelected, setIsOtherSelected] = useState<boolean>(isOtherOrgType(currentUser?.orgType))\r\n  const [orgType, setOrgType] = useState<string | undefined>(currentUser?.orgType)\r\n\r\n  const initialValues: any = {\r\n    phoneNumber: currentUser?.phoneNumber,\r\n    companyName: currentUser?.companyName,\r\n    orgType: currentUser?.orgType,\r\n    mailingAddStreetName: currentUser?.mailingAddress.addressLine,\r\n    mailingAddCityName: currentUser?.mailingAddress.city,\r\n    mailingAddStateName: currentUser?.mailingAddress.state,\r\n    mailingAddZip: currentUser?.mailingAddress.postCode,\r\n    billingAddStreetName: currentUser?.billingAddress?.addressLine,\r\n    billingAddCityName: currentUser?.billingAddress?.city,\r\n    billingAddStateName: currentUser?.billingAddress?.state,\r\n    billingAddZip: currentUser?.billingAddress?.postCode\r\n  }\r\n\r\n  const formik = useFormik<any>({\r\n    initialValues,\r\n    validationSchema: profileDetailsSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        const formData = new FormData()\r\n\r\n        console.log(values.firstname)\r\n        formData.append('userId', userId ? userId.toString() : '') \r\n        formData.append('companyId', companyId ? companyId.toString() : '') \r\n        formData.append('phoneNumber', values.phoneNumber)\r\n        formData.append('companyName', values.companyName)\r\n        formData.append('orgType', values.orgType)\r\n        formData.append('mailingAddStreetName', values.mailingAddStreetName)\r\n        formData.append('mailingAddCityName', values.mailingAddCityName)\r\n        formData.append('mailingAddStateName', values.mailingAddStateName)\r\n        formData.append('mailingAddZip', values.mailingAddZip)\r\n        formData.append('billingAddStreetName', values.billingAddStreetName)\r\n        formData.append('billingAddCityName', values.billingAddCityName)\r\n        formData.append('billingAddStateName', values.billingAddStateName)\r\n        formData.append('billingAddZip', values.billingAddZip)\r\n        formData.append('isMailAndBillAddressSame', checkboxTick)\r\n        formData.append('image', image)\r\n\r\n        updateCompanyProfile(formData)\r\n        .then((response) => {\r\n          if(response.data.success) {\r\n            setCurrentUser((user) => {\r\n                let updatedData = user\r\n                updatedData = {...updatedData, ...response.data.companyData}\r\n                \r\n                let newAuth = auth\r\n                if(newAuth && newAuth.user) {\r\n                    newAuth.user = updatedData\r\n                }\r\n                saveAuth(newAuth)\r\n                \r\n                return updatedData\r\n            })\r\n            setChecked(true)\r\n            setSuccessMessage(response.data.message)\r\n            setLoading(false)\r\n            window.scrollTo(0,0)\r\n          } else {\r\n              setChecked(true)\r\n              setErrorMessage(response.data.message)\r\n              setLoading(false)\r\n              window.scrollTo(0,0)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setChecked(true)\r\n          setErrorMessage('Failed to update profile details')\r\n          setLoading(false)\r\n          window.scrollTo(0,0)\r\n        })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    formik.setFieldValue('phoneNumber', compPhoneNumb)\r\n  }, [compPhoneNumb])\r\n\r\n\r\n  const handlePhoneNumberChange = (e: any, numbertype: 'Company' | 'Mobile') => {\r\n    if(numbertype == 'Company') {\r\n      const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n      setCompPhoneNumb(formattedPhoneNumber);\r\n    } else {\r\n      const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n      setUserMobNumb(formattedPhoneNumber);\r\n    }\r\n  }\r\n\r\n  const formatPhoneNumber = (value: string) => {\r\n    if (!value) return value;\r\n  \r\n    const phoneNumber = value.replace(/[^\\d]/g, '');\r\n  \r\n    const phoneNumberLength = phoneNumber.length;\r\n  \r\n    if (phoneNumberLength < 4) return phoneNumber;\r\n\r\n    if (phoneNumberLength < 7) {\r\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n    }\r\n  \r\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\r\n      3,\r\n      6\r\n    )}-${phoneNumber.slice(6, 10)}`;\r\n  }\r\n\r\n  const updateOrgType = (_type: string) => {\r\n    if(_type == 'Other') {\r\n      setOrgType(_type)\r\n      formik.setFieldValue('orgType', '')\r\n      setIsOtherSelected(true)\r\n    } else {\r\n      setIsOtherSelected(false)\r\n      formik.setFieldValue('orgType', _type)\r\n      setOrgType(_type)\r\n    }\r\n  } \r\n\r\n  const autoFillBillingAddress = (event: any) => {\r\n\r\n    if(event.target.checked) {\r\n      const streetName = formik.getFieldMeta('billingAddStreetName')\r\n      const city = formik.getFieldMeta('billingAddCityName')\r\n      const state = formik.getFieldMeta('billingAddStateName')\r\n      const zipcode = formik.getFieldMeta('billingAddZip')\r\n\r\n      if(streetName.value == '' || city.value == '' || state.value == '' || zipcode.value == '') {\r\n        return\r\n      }\r\n\r\n      formik.setFieldValue('mailingAddStreetName', streetName.value)\r\n      formik.setFieldValue('mailingAddCityName', city.value)\r\n      formik.setFieldValue('mailingAddStateName', state.value)\r\n      formik.setFieldValue('mailingAddZip', zipcode.value)\r\n      setCheckboxTick(true)\r\n    } else {\r\n      setCheckboxTick(false)\r\n      formik.setFieldValue('mailingAddStreetName', '')\r\n      formik.setFieldValue('mailingAddCityName', '')\r\n      formik.setFieldValue('mailingAddStateName', '')\r\n      formik.setFieldValue('mailingAddZip', '')\r\n    }\r\n  }\r\n\r\n  const handleStreetNameChange = (event: any, addressType: 'mailing' | 'billing') => {\r\n    if(addressType == 'billing') {\r\n      if(checkboxTick) {\r\n        formik.setFieldValue('billingAddStreetName', event.target.value)\r\n        formik.setFieldValue('mailingAddStreetName', event.target.value)\r\n      } else {\r\n        formik.setFieldValue('billingAddStreetName', event.target.value)\r\n      }\r\n    } else if(addressType == 'mailing') {\r\n      formik.setFieldValue('mailingAddStreetName', event.target.value)\r\n    }\r\n  }\r\n\r\n  const handleCityNameChange = (event: any, addressType: 'mailing' | 'billing') => {\r\n    if(addressType == 'billing') {\r\n      if(checkboxTick) {\r\n        formik.setFieldValue('billingAddCityName', event.target.value)\r\n        formik.setFieldValue('mailingAddCityName', event.target.value)\r\n      } else {\r\n        formik.setFieldValue('billingAddCityName', event.target.value)\r\n      }\r\n    } else if(addressType == 'mailing') {\r\n      formik.setFieldValue('mailingAddCityName', event.target.value)\r\n    }\r\n  }\r\n\r\n  const handleStateNameChange = (event: any, addressType: 'mailing' | 'billing') => {\r\n    if(addressType == 'billing') {\r\n      if(checkboxTick) {\r\n        formik.setFieldValue('mailingAddStateName', event.target.value)\r\n        formik.setFieldValue('billingAddStateName', event.target.value)\r\n      } else {\r\n        formik.setFieldValue('billingAddStateName', event.target.value)\r\n      }\r\n    } else if(addressType == 'mailing') {\r\n      formik.setFieldValue('mailingAddStateName', event.target.value)\r\n    }\r\n  }\r\n\r\n  const handleZipCodeChange = (event: any, addressType: 'mailing' | 'billing') => {\r\n    if(addressType == 'billing') {\r\n      if(checkboxTick) {\r\n        formik.setFieldValue('mailingAddZip', event.target.value)\r\n        formik.setFieldValue('billingAddZip', event.target.value)\r\n      } else {\r\n        formik.setFieldValue('billingAddZip', event.target.value)\r\n      }\r\n    } else if(addressType == 'mailing') {\r\n      formik.setFieldValue('mailingAddZip', event.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_profile_details'\r\n        aria-expanded='true'\r\n        aria-controls='kt_account_profile_details'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'>Company Profile Details</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {successMessage !== \"\" ? (\r\n        <AlertSuccess message={successMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      {errorMessage !== \"\" ? (\r\n        <AlertDanger message={errorMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      <div id='kt_account_profile_details' className='collapse show'>\r\n        <form onSubmit={formik.handleSubmit} noValidate className='form'>\r\n          <div className='card-body border-top p-9'>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>Company Logo</label>\r\n              <div className='col-lg-8'>\r\n                <div\r\n                  className='image-input image-input-outline'\r\n                  data-kt-image-input='true'\r\n                  style={{backgroundImage: `url(${toAbsoluteUrl('/media/avatars/blank.png')})`}}\r\n                >\r\n                  {image == \"\" ? (\r\n                    <div>\r\n                      <img src={`${process.env.REACT_APP_API_COMPANY_LOGO_URL}/${auth?.user?.companyLogo}`} className='w-200px mb-3' />\r\n                    </div>\r\n                  ): (\r\n                    <div>\r\n                      <img src={URL.createObjectURL(image)} className='w-200px mb-3' />\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                    <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg, image/jpg\" onChange={(e) => handleImageChange(e)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n                <label className='col-lg-4 col-form-label required fw-bold fs-6'>Company / Organization Name</label>\r\n\r\n                <div className='col-lg-8 fv-row'>\r\n                <input\r\n                    type='text'\r\n                    className='form-control form-control-lg form-control-solid'\r\n                    placeholder='Company name'\r\n                    {...formik.getFieldProps('companyName')}\r\n                />\r\n                {formik.touched.companyName && formik.errors.companyName && (\r\n                    <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'><>{formik.errors.companyName}</></div>\r\n                    </div>\r\n                )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n                <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                    <span className='required'>Company Phone Number</span>\r\n                </label>\r\n\r\n                <div className='col-lg-8 fv-row'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control form-control-lg form-control-solid'\r\n                        placeholder='Company phone number'\r\n                        {...formik.getFieldProps('phoneNumber')}\r\n                        onChange={(e) => handlePhoneNumberChange(e, 'Company')}\r\n                    />\r\n                    {formik.touched.phoneNumber && formik.errors.phoneNumber && (\r\n                        <div className='fv-plugins-message-container'>\r\n                        <div className='fv-help-block'><>{formik.errors.phoneNumber}</></div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n                {/*begin::Form Group */}\r\n                <div className='fv-row mb-8 org-type'>\r\n                  <label className='form-label fw-bolder text-dark fs-6'>Company / Organization Type</label>\r\n                  <div>\r\n                    {/*begin:Option */}\r\n                    <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                      <span className='d-flex align-items-center me-2'>\r\n                        <span className='d-flex flex-column'>\r\n                          <span className='fw-bold text-muted fs-6'>Management Company</span>\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className='form-check form-check-custom form-check-solid'>\r\n                        <input\r\n                          className='form-check-input'\r\n                          type='radio'\r\n                          name='orgType'\r\n                          value='Management Company'\r\n                          checked={orgType === 'Management Company' && !isOtherSelected}\r\n                          onChange={() => updateOrgType('Management Company')}\r\n                        />\r\n                      </span>\r\n                    </label>\r\n                    {/*end::Option */}\r\n\r\n                    {/*begin:Option */}\r\n                    <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                      <span className='d-flex align-items-center me-2'>\r\n                        <span className='d-flex flex-column'>\r\n                          <span className='fw-bold text-muted fs-6'>Self Managed Community</span>\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className='form-check form-check-custom form-check-solid'>\r\n                        <input\r\n                          className='form-check-input'\r\n                          type='radio'\r\n                          name='orgType'\r\n                          value='Self Managed Community'\r\n                          checked={orgType === 'Self Managed Community' && !isOtherSelected}\r\n                          onChange={() => updateOrgType('Self Managed Community')}\r\n                        />\r\n                      </span>\r\n                    </label>\r\n                    {/*end::Option */}\r\n\r\n                    {/*begin:Option */}\r\n                    <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                      <span className='d-flex align-items-center me-2'>\r\n                        <span className='d-flex flex-column'>\r\n                          <span className='fw-bold text-muted fs-6'>Other</span>\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className='form-check form-check-custom form-check-solid'>\r\n                        <input\r\n                          className='form-check-input'\r\n                          type='radio'\r\n                          name='appType'\r\n                          value='Other'\r\n                          checked={isOtherSelected}\r\n                          onChange={() => updateOrgType('Other')}\r\n                        />\r\n                      </span>\r\n                    </label>\r\n                    {/*end::Option */}\r\n\r\n                    {isOtherSelected && \r\n                      <>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='Organization type'\r\n                          autoComplete='off'\r\n                          {...formik.getFieldProps('orgType')}\r\n                          className=\"form-control form-control-lg form-control-solid\"\r\n                        />\r\n                        \r\n                        <>\r\n                          {formik.touched.orgType && formik.errors.orgType && (\r\n                            <div className='fv-plugins-message-container'>\r\n                              <div className='fv-help-block'>\r\n                                <span role='alert'><>{formik.errors.orgType}</></span>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      </>\r\n                    }\r\n                    \r\n                  </div>\r\n                </div>\r\n                {/*end::Form Group */}\r\n\r\n                <label\r\n                  className='btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center mb-10'\r\n                  htmlFor='kt_create_account_form_account_type_personal'\r\n                >\r\n                  <span className='w-100 fw-bold text-start'>\r\n                    <span className='text-dark fw-bolder d-block fs-4 mb-2'>Billing Address</span>\r\n                    <div className='row mb-6'>\r\n                      <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                        <span className='required'>Street Name</span>\r\n                      </label>\r\n\r\n                      <div className='col-lg-8 fv-row'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control form-control-lg form-control-solid'\r\n                          placeholder='Street Name'\r\n                          {...formik.getFieldProps('billingAddStreetName')}\r\n                          onChange={(e) => handleStreetNameChange(e, 'billing')}\r\n                        />\r\n\r\n                        {formik.touched.billingAddStreetName && formik.errors.billingAddStreetName && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'><>{formik.errors.billingAddStreetName}</></div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                      <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                        <span className='required'>City</span>\r\n                      </label>\r\n\r\n                      <div className='col-lg-8 fv-row'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control form-control-lg form-control-solid'\r\n                          placeholder='City Name'\r\n                          {...formik.getFieldProps('billingAddCityName')}\r\n                          onChange={(e) => handleCityNameChange(e, 'billing')}\r\n                        />\r\n\r\n                        {formik.touched.billingAddCityName && formik.errors.billingAddCityName && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'><>{formik.errors.billingAddCityName}</></div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                      <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                        <span className='required'>State</span>\r\n                      </label>\r\n\r\n                      <div className='col-lg-8 fv-row'>\r\n\r\n                        <select\r\n                          value={formik.getFieldMeta('billingAddStateName').value}\r\n                          className='form-select form-select-lg form-select-solid'\r\n                          name='states'\r\n                          onChange={(e) => handleStateNameChange(e, 'billing')}\r\n                        >\r\n                          <option value=\"\">Select a State</option>\r\n                          <option value=\"AL\">Alabama</option>\r\n                          <option value=\"AK\">Alaska</option>\r\n                          <option value=\"AZ\">Arizona</option>\r\n                          <option value=\"AR\">Arkansas</option>\r\n                          <option value=\"CA\">California</option>\r\n                          <option value=\"CO\">Colorado</option>\r\n                          <option value=\"CT\">Connecticut</option>\r\n                          <option value=\"DE\">Delaware</option>\r\n                          <option value=\"DC\">District Of Columbia</option>\r\n                          <option value=\"FL\">Florida</option>\r\n                          <option value=\"GA\">Georgia</option>\r\n                          <option value=\"HI\">Hawaii</option>\r\n                          <option value=\"ID\">Idaho</option>\r\n                          <option value=\"IL\">Illinois</option>\r\n                          <option value=\"IN\">Indiana</option>\r\n                          <option value=\"IA\">Iowa</option>\r\n                          <option value=\"KS\">Kansas</option>\r\n                          <option value=\"KY\">Kentucky</option>\r\n                          <option value=\"LA\">Louisiana</option>\r\n                          <option value=\"ME\">Maine</option>\r\n                          <option value=\"MD\">Maryland</option>\r\n                          <option value=\"MA\">Massachusetts</option>\r\n                          <option value=\"MI\">Michigan</option>\r\n                          <option value=\"MN\">Minnesota</option>\r\n                          <option value=\"MS\">Mississippi</option>\r\n                          <option value=\"MO\">Missouri</option>\r\n                          <option value=\"MT\">Montana</option>\r\n                          <option value=\"NE\">Nebraska</option>\r\n                          <option value=\"NV\">Nevada</option>\r\n                          <option value=\"NH\">New Hampshire</option>\r\n                          <option value=\"NJ\">New Jersey</option>\r\n                          <option value=\"NM\">New Mexico</option>\r\n                          <option value=\"NY\">New York</option>\r\n                          <option value=\"NC\">North Carolina</option>\r\n                          <option value=\"ND\">North Dakota</option>\r\n                          <option value=\"OH\">Ohio</option>\r\n                          <option value=\"OK\">Oklahoma</option>\r\n                          <option value=\"OR\">Oregon</option>\r\n                          <option value=\"PA\">Pennsylvania</option>\r\n                          <option value=\"RI\">Rhode Island</option>\r\n                          <option value=\"SC\">South Carolina</option>\r\n                          <option value=\"SD\">South Dakota</option>\r\n                          <option value=\"TN\">Tennessee</option>\r\n                          <option value=\"TX\">Texas</option>\r\n                          <option value=\"UT\">Utah</option>\r\n                          <option value=\"VT\">Vermont</option>\r\n                          <option value=\"VA\">Virginia</option>\r\n                          <option value=\"WA\">Washington</option>\r\n                          <option value=\"WV\">West Virginia</option>\r\n                          <option value=\"WI\">Wisconsin</option>\r\n                          <option value=\"WY\">Wyoming</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                      <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                        <span className='required'>Zipcode</span>\r\n                      </label>\r\n\r\n                      <div className='col-lg-8 fv-row'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control form-control-lg form-control-solid'\r\n                          placeholder='Zipcode'\r\n                          {...formik.getFieldProps('billingAddZip')}\r\n                          onChange={(e) => handleZipCodeChange(e, 'billing')}\r\n                        />\r\n\r\n                        {formik.touched.billingAddZip && formik.errors.billingAddZip && (\r\n                          <div className='fv-plugins-message-container'>\r\n                            <div className='fv-help-block'><>{formik.errors.billingAddZip}</></div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </span>\r\n                </label>\r\n\r\n                <label\r\n                  className='btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center mb-10'\r\n                  htmlFor='kt_create_account_form_account_type_personal'\r\n                >\r\n                  <span className='w-100 fw-bold text-start'>\r\n                    <span className='text-dark fw-bolder d-block fs-4 mb-2'>Mailing Address</span>\r\n\r\n                    <div className='fv-row'>\r\n                      <input \r\n                        className=\"form-check-input me-5\" \r\n                        onChange={(e) => autoFillBillingAddress(e)}\r\n                        type=\"checkbox\" \r\n                        checked={checkboxTick} \r\n                      />\r\n                      <label className='form-label fw-bolder text-dark fs-6'>Same as billing address</label>\r\n                    </div>\r\n                    \r\n                    {!checkboxTick && \r\n                      <>\r\n                        <div className='row mb-6'>\r\n                          <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                            <span className='required'>Street Name</span>\r\n                          </label>\r\n\r\n                          <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control form-control-lg form-control-solid'\r\n                              placeholder='Street Name'\r\n                              {...formik.getFieldProps('mailingAddStreetName')}\r\n                              onChange={(e) => handleStreetNameChange(e, 'mailing')}\r\n                            />\r\n\r\n                            {formik.touched.mailingAddStreetName && formik.errors.mailingAddStreetName && (\r\n                              <div className='fv-plugins-message-container'>\r\n                                <div className='fv-help-block'><>{formik.errors.mailingAddStreetName}</></div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='row mb-6'>\r\n                          <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                            <span className='required'>City</span>\r\n                          </label>\r\n\r\n                          <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control form-control-lg form-control-solid'\r\n                              placeholder='City Name'\r\n                              {...formik.getFieldProps('mailingAddCityName')}\r\n                              onChange={(e) => handleCityNameChange(e, 'mailing')}\r\n                            />\r\n\r\n                            {formik.touched.mailingAddCityName && formik.errors.mailingAddCityName && (\r\n                              <div className='fv-plugins-message-container'>\r\n                                <div className='fv-help-block'><>{formik.errors.mailingAddCityName}</></div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='row mb-6'>\r\n                          <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                            <span className='required'>State</span>\r\n                          </label>\r\n\r\n                          <div className='col-lg-8 fv-row'>\r\n\r\n                            <select\r\n                              value={formik.getFieldMeta('mailingAddStateName').value}\r\n                              className='form-select form-select-lg form-select-solid'\r\n                              name='states'\r\n                              onChange={(e) => handleStateNameChange(e, 'mailing')}\r\n                            >\r\n                              <option value=\"\">Select a State</option>\r\n                              <option value=\"AL\">Alabama</option>\r\n                              <option value=\"AK\">Alaska</option>\r\n                              <option value=\"AZ\">Arizona</option>\r\n                              <option value=\"AR\">Arkansas</option>\r\n                              <option value=\"CA\">California</option>\r\n                              <option value=\"CO\">Colorado</option>\r\n                              <option value=\"CT\">Connecticut</option>\r\n                              <option value=\"DE\">Delaware</option>\r\n                              <option value=\"DC\">District Of Columbia</option>\r\n                              <option value=\"FL\">Florida</option>\r\n                              <option value=\"GA\">Georgia</option>\r\n                              <option value=\"HI\">Hawaii</option>\r\n                              <option value=\"ID\">Idaho</option>\r\n                              <option value=\"IL\">Illinois</option>\r\n                              <option value=\"IN\">Indiana</option>\r\n                              <option value=\"IA\">Iowa</option>\r\n                              <option value=\"KS\">Kansas</option>\r\n                              <option value=\"KY\">Kentucky</option>\r\n                              <option value=\"LA\">Louisiana</option>\r\n                              <option value=\"ME\">Maine</option>\r\n                              <option value=\"MD\">Maryland</option>\r\n                              <option value=\"MA\">Massachusetts</option>\r\n                              <option value=\"MI\">Michigan</option>\r\n                              <option value=\"MN\">Minnesota</option>\r\n                              <option value=\"MS\">Mississippi</option>\r\n                              <option value=\"MO\">Missouri</option>\r\n                              <option value=\"MT\">Montana</option>\r\n                              <option value=\"NE\">Nebraska</option>\r\n                              <option value=\"NV\">Nevada</option>\r\n                              <option value=\"NH\">New Hampshire</option>\r\n                              <option value=\"NJ\">New Jersey</option>\r\n                              <option value=\"NM\">New Mexico</option>\r\n                              <option value=\"NY\">New York</option>\r\n                              <option value=\"NC\">North Carolina</option>\r\n                              <option value=\"ND\">North Dakota</option>\r\n                              <option value=\"OH\">Ohio</option>\r\n                              <option value=\"OK\">Oklahoma</option>\r\n                              <option value=\"OR\">Oregon</option>\r\n                              <option value=\"PA\">Pennsylvania</option>\r\n                              <option value=\"RI\">Rhode Island</option>\r\n                              <option value=\"SC\">South Carolina</option>\r\n                              <option value=\"SD\">South Dakota</option>\r\n                              <option value=\"TN\">Tennessee</option>\r\n                              <option value=\"TX\">Texas</option>\r\n                              <option value=\"UT\">Utah</option>\r\n                              <option value=\"VT\">Vermont</option>\r\n                              <option value=\"VA\">Virginia</option>\r\n                              <option value=\"WA\">Washington</option>\r\n                              <option value=\"WV\">West Virginia</option>\r\n                              <option value=\"WI\">Wisconsin</option>\r\n                              <option value=\"WY\">Wyoming</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='row mb-6'>\r\n                          <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                            <span className='required'>Zipcode</span>\r\n                          </label>\r\n\r\n                          <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control form-control-lg form-control-solid'\r\n                              placeholder='Zipcode'\r\n                              {...formik.getFieldProps('mailingAddZip')}\r\n                              onChange={(e) => handleZipCodeChange(e, 'mailing')}\r\n                            />\r\n\r\n                            {formik.touched.mailingAddZip && formik.errors.mailingAddZip && (\r\n                              <div className='fv-plugins-message-container'>\r\n                                <div className='fv-help-block'><>{formik.errors.mailingAddZip}</></div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  </span>\r\n                </label>\r\n            </div>\r\n\r\n          <div className='card-footer d-flex justify-content-end py-6 px-9'>\r\n            <button type='submit' className='btn btn-primary' disabled={loading}>\r\n              {!loading && 'Save Changes'}\r\n              {loading && (\r\n                <span className='indicator-progress' style={{display: 'block'}}>\r\n                  Please wait...{' '}\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {CompanyProfile}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {getAccountStats} from '../../auth/core/_requests'\r\nimport { useAuth } from '../../auth'\r\nimport { getCompanyUsage } from '../../document-management/api'\r\n\r\nconst ApplicationUsage: React.FC = () => {\r\n  const { currentUser } = useAuth()\r\n  const [loading, setLoading] = useState(true)\r\n  const [noOfUsers, setNoOfUsers] = useState<any>('')\r\n  const [storageUsage, setStorageUsage] = useState<any>('')\r\n\r\n  useEffect(() => {\r\n    getCompanyUsage(currentUser?.companyId)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        setNoOfUsers(response.data.userCount)\r\n        setStorageUsage(response.data.storageOccupationData)\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_notifications'\r\n        aria-expanded='true'\r\n        aria-controls='kt_account_notifications'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'>Application Usage</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div id='kt_account_notifications' className='collapse show'>\r\n        <form className='form'>\r\n          <div className='card-body border-top px-9 pt-3 pb-4'>\r\n            <div className='table-responsive'>\r\n              <table className='table table-row-dashed border-gray-300 align-middle gy-6'>\r\n                <tbody className='fs-6 fw-bold'>\r\n                  <tr>\r\n                    <td className='min-w-250px fs-4 fw-bolder'>Usage Parameter (Month to date)</td>\r\n                    <td className='w-125px'>\r\n                      <div className='form-check form-check-solid'>\r\n                        <label\r\n                          className='form-check-label ps-2'\r\n                          htmlFor='kt_settings_notification_email'\r\n                        >\r\n                          Used\r\n                        </label>\r\n                      </div>\r\n                    </td>\r\n                    <td className='w-125px'>\r\n                      <div className='form-check form-check-solid'>\r\n                        <label\r\n                          className='form-check-label ps-2'\r\n                          htmlFor='kt_settings_notification_phone'\r\n                        >\r\n                          Limit\r\n                        </label>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Number of queries</td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <label className='form-check-label ps-2'>{'50'}</label>\r\n                        </div>\r\n                      }\r\n                      {loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <label className='form-check-label ps-2'>{\"1000\"}</label>\r\n                        </div>\r\n                      }\r\n                      {loading &&\r\n                        <div className='form-check form-check-solid'>\r\n                          <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>Number of users</td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <label className='form-check-label ps-2'>{noOfUsers}</label>\r\n                        </div>\r\n                      }\r\n                      {loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                        <label className='form-check-label ps-2'>{\"100\"}</label>\r\n                      </div>\r\n                      }\r\n                      {loading && \r\n                        <div className='form-check form-check-solid'>\r\n                        <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                      </div>\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td>File storage size</td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <label className='form-check-label ps-2'>{storageUsage}</label>\r\n                        </div>\r\n                      }\r\n                      {loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      {!loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <label className='form-check-label ps-2'>{\"5\"} GB</label>\r\n                        </div>\r\n                      }\r\n                      {loading && \r\n                        <div className='form-check form-check-solid'>\r\n                          <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ApplicationUsage}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from 'react'\r\nimport {KTIcon} from '../../../../_metronic/helpers'\r\nimport { enableCompany2FA, disableCompany2FA } from '../../auth/core/_requests'\r\nimport { useAuth } from '../../auth'\r\nimport { AlertDanger, AlertSuccess } from '../../alerts/Alerts'\r\n\r\n\r\nconst TwoFactorAuthentication: React.FC = () => {\r\n  const { currentUser, setCurrentUser, saveAuth, auth } = useAuth()\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\")\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\")\r\n\r\n  if(successMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(errorMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const enableCompanyTwoFactorAuth = () => {\r\n    enableCompany2FA(currentUser?.companyId, currentUser?.id)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        setCurrentUser((user) => {\r\n          const updatedUser = user\r\n          if(updatedUser) {\r\n              updatedUser.twoFactorAuth = true\r\n              updatedUser.companytwoFactorAuth = true\r\n          }\r\n  \r\n          let newAuth = auth\r\n          if(newAuth && newAuth.user) {\r\n              newAuth.user = updatedUser\r\n          }\r\n          saveAuth(newAuth)\r\n          \r\n          return updatedUser\r\n        })\r\n        setChecked(true)\r\n        setSuccessMessage(response.data.message)\r\n      } else {\r\n        setChecked(true)\r\n        setErrorMessage(response.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  const disableCompanyTwoFactorAuth = () => {\r\n    disableCompany2FA(currentUser?.companyId)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        setCurrentUser((user) => {\r\n          const updatedUser = user\r\n          if(updatedUser) {\r\n              updatedUser.twoFactorAuth = false\r\n              updatedUser.companytwoFactorAuth = false\r\n          }\r\n          let newAuth = auth\r\n          if(newAuth && newAuth.user) {\r\n              newAuth.user = updatedUser\r\n          }\r\n          saveAuth(newAuth)\r\n          \r\n          return updatedUser\r\n        })\r\n        setChecked(true)\r\n        setSuccessMessage(response.data.message)\r\n      } else {\r\n        setChecked(true)\r\n        setErrorMessage(response.data.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_signin_method'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'>Two Factor Authentication</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {successMessage !== \"\" ? (\r\n        <AlertSuccess message={successMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      {errorMessage !== \"\" ? (\r\n        <AlertDanger message={errorMessage} checked={checked} />\r\n      ) : null }\r\n\r\n      <div id='kt_account_signin_method' className='collapse show'>\r\n        <div className='card-body border-top p-9'>\r\n          <div className='notice d-flex bg-light-primary rounded border-primary border border-dashed p-6'>\r\n            <KTIcon iconName='shield-tick' className='fs-2tx text-primary me-4' />\r\n            <div className='d-flex flex-stack flex-grow-1 flex-wrap flex-md-nowrap'>\r\n              <div className='mb-3 mb-md-0 fw-bold'>\r\n                <h4 className='text-gray-800 fw-bolder'>Secure Your Company User Accounts</h4>\r\n                <div className='fs-6 text-gray-600 pe-7'>\r\n                  Two-factor authentication adds an extra layer of security to your company's user accounts. To log\r\n                  in, in addition you'll need to provide a 4 digit code\r\n                </div>\r\n              </div>\r\n              {currentUser?.companytwoFactorAuth && \r\n                <button\r\n                  onClick={() => disableCompanyTwoFactorAuth()}\r\n                  className='btn btn-light btn-active-light-primary'\r\n                >\r\n                  Disable\r\n                </button>\r\n              }\r\n              {!currentUser?.companytwoFactorAuth &&\r\n                <button\r\n                  className='btn btn-primary me-2 px-6'\r\n                  onClick={() => enableCompanyTwoFactorAuth()}\r\n                  disabled={!currentUser?.accountStatus}\r\n                >\r\n                  Enable\r\n                </button>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {TwoFactorAuthentication}\r\n","import React, { useEffect } from 'react'\r\nimport { CompanyProfile } from './components/CompanyProfile'\r\nimport { ApplicationUsage } from './components/ApplicationUsage'\r\nimport { TwoFactorAuthentication } from './components/TwoFactorAuth'\r\nimport { useAuth } from '../auth'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport function ProfileComponents() {\r\n  const {currentUser, auth} = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if(auth?.user?.role != 1) {\r\n      navigate('/error/404')\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <>\r\n      {auth?.user?.role == 1 && \r\n        <>\r\n          <CompanyProfile />\r\n          <TwoFactorAuthentication />\r\n          <ApplicationUsage />\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes, Outlet} from 'react-router-dom'\r\nimport { ProfileComponents } from './ProfileComponents'\r\n\r\n\r\nconst CompanyProfilePage: React.FC = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        element={\r\n          <>\r\n            <Outlet />\r\n          </>\r\n        }\r\n      >\r\n        <Route\r\n          path='profile'\r\n          element={\r\n            <>\r\n              <ProfileComponents />\r\n            </>\r\n          }\r\n        />\r\n        <Route index element={<Navigate to='/company/profile' />} />\r\n      </Route>\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default CompanyProfilePage\r\n"],"names":["profileDetailsSchema","Yup","shape","phoneNumber","min","max","required","companyName","orgType","mailingAddStreetName","mailingAddCityName","mailingAddStateName","mailingAddZip","billingAddStreetName","billingAddCityName","billingAddStateName","billingAddZip","CompanyProfile","useState","loading","setLoading","useAuth","currentUser","auth","setCurrentUser","saveAuth","image","setImage","id","userId","companyId","checked","setChecked","successMessage","setSuccessMessage","errorMessage","setErrorMessage","compPhoneNumb","setCompPhoneNumb","mobileNumber","setUserMobNumb","isMailAndBillAddressSame","checkboxTick","setCheckboxTick","setTimeout","type","isOtherSelected","setIsOtherSelected","setOrgType","initialValues","mailingAddress","addressLine","city","state","postCode","billingAddress","formik","useFormik","validationSchema","onSubmit","values","formData","FormData","console","log","firstname","append","toString","updateCompanyProfile","then","response","data","success","user","updatedData","companyData","newAuth","message","window","scrollTo","catch","err","useEffect","setFieldValue","formatPhoneNumber","value","replace","phoneNumberLength","length","slice","updateOrgType","_type","handleStreetNameChange","event","addressType","target","handleCityNameChange","handleStateNameChange","handleZipCodeChange","className","role","handleSubmit","noValidate","style","backgroundImage","toAbsoluteUrl","src","process","companyLogo","URL","createObjectURL","accept","onChange","e","files","handleImageChange","placeholder","getFieldProps","touched","errors","numbertype","formattedPhoneNumber","handlePhoneNumberChange","name","autoComplete","htmlFor","getFieldMeta","streetName","zipcode","autoFillBillingAddress","disabled","display","ApplicationUsage","noOfUsers","setNoOfUsers","storageUsage","setStorageUsage","getCompanyUsage","userCount","storageOccupationData","TwoFactorAuthentication","iconName","companytwoFactorAuth","onClick","disableCompany2FA","updatedUser","twoFactorAuth","enableCompany2FA","accountStatus","ProfileComponents","navigate","useNavigate","element","path","index","to"],"sourceRoot":""}