{"version":3,"file":"static/js/662.09b23bc8.chunk.js","mappings":"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","sources":["app/modules/invitations/components/UserSummary.tsx","app/modules/invitations/components/UserUpdateCard.tsx","app/modules/invitations/components/UserUpdateWithAddress.tsx","app/modules/invitations/components/TwoFactorAuthCard.tsx","app/modules/invitations/components/UpdatePasswordDialog.tsx","app/modules/invitations/UserDetailPage.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport {toAbsoluteUrl} from '../../../../_metronic/helpers'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Navigate, Route } from 'react-router'\r\nimport { verifyUserAccountForAdmin, blacklistUserAccount, whitelistUserAccount } from '../api'\r\n\r\nconst roleToIdMap: any = {\r\n    '1' : 'Administrator',\r\n    '2' : 'User',\r\n    '3' : 'View Only'\r\n}\r\n\r\nexport const UserSummary = (props: any) => {\r\n\r\n    const [verifying, setVerifying] = useState<boolean>(false)\r\n\r\n    const verifyUserAccount = () => {\r\n        setVerifying(true)\r\n        verifyUserAccountForAdmin(props.userID)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n                props.setUserDetail((user: any) => {\r\n                    let updated = user\r\n                    updated.accountStatus = true\r\n                    return updated\r\n                })\r\n                props.setSuccessResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setVerifying(false)\r\n            } else {\r\n                props.setFailureResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setVerifying(false)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            props.setFailureResMessage('Failed to update account status due to internal error')\r\n            props.setChecked(true)\r\n            setVerifying(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-5 mb-xl-8\">\r\n                <div className=\"card-body pt-0 pt-lg-1\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body d-flex flex-center flex-column pt-12 p-9 px-0\">\r\n                            <div className=\"symbol symbol-100px symbol-circle mb-7\">\r\n                                <img src={`${process.env.REACT_APP_API_USER_IMAGE_URL}/${props.userDetail.avatarName}`} alt=\"image\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-stack fs-4 py-3\">\r\n                        <div \r\n                            className=\"fw-bolder\" \r\n                        >\r\n                            Details\r\n                            <span className=\"ms-2 rotate-180\">\r\n                                <span className=\"svg-icon svg-icon-3\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                                            <polygon points=\"0 0 24 0 24 24 0 24\" />\r\n                                            <path d=\"M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z\" fill=\"#000000\" fillRule=\"nonzero\" transform=\"translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <span>\r\n                            <div \r\n                                className=\"btn btn-sm btn-light-primary\" \r\n                                onClick={() => props.setShowUserUpdateDialog(true)}\r\n                            >\r\n                                Edit\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div id=\"kt_user_view_details\" className=\"show\">\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">First Name</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <span className=\"text-gray-600\">{props.userDetail.firstname}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Last Name</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <span className=\"text-gray-600\">{props.userDetail.lastname}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Email</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <span className=\"text-gray-600\">\r\n                                    {props.userDetail.email}\r\n\r\n                                    {props.userDetail.accountStatus && \r\n                                        <>\r\n                                            <span data-bs-toggle=\"tooltip\" title=\"Verified\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"mb-1 ms-2 bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                                </svg>\r\n                                            </span>\r\n                                        </>\r\n                                    }\r\n                                    {!props.userDetail.accountStatus && \r\n                                        <span data-bs-toggle=\"tooltip\" title=\"Not Verified\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"mb-1 ms-2 bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Mobile Number</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <span className=\"text-gray-600\">{props.userDetail.mobileNumber}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">User Role</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <span className=\"text-gray-600\">{roleToIdMap[props.userDetail.role.toString()]}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Account Deletion Status</div>\r\n                            <div className=\"text-gray-600\">\r\n                                {props.userDetail.accountBlocked && \r\n                                    <div \r\n                                        className=\"btn btn-sm btn-light-primary\" \r\n                                        onClick={() => props.openDialogForUserDeletion(`undelete-user-${props.userID}`)}\r\n                                    >\r\n                                        Unmark Deletion\r\n                                    </div>\r\n                                }\r\n                                {!props.userDetail.accountBlocked && \r\n                                    <div \r\n                                        className=\"btn btn-sm btn-light-danger\" \r\n                                        onClick={() => props.openDialogForUserDeletion(`delete-user-${props.userID}`)}\r\n                                    >\r\n                                        Mark for Deletion\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {FormattedMessage} from 'react-intl'\r\n\r\nexport const UserUpdateCard =  (props: any) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card pt-4 mb-6 mb-xl-9\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">\r\n                        <h2>Update Password</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body pt-0 pb-5\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table align-middle table-row-dashed gy-5\" id=\"kt_table_users_login_session\">\r\n                            <tbody className=\"fs-6 fw-bold text-gray-600\">\r\n                                <tr>\r\n                                    <td className='ps-3'>Password</td>\r\n                                    <td>******</td>\r\n                                    <td className=\"text-end pe-3\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"btn btn-icon btn-active-light-primary w-30px h-30px ms-auto\" \r\n                                            onClick={() => props.setShowPasswordUpdateDialog(true)}\r\n                                        >\r\n                                            <span className=\"svg-icon svg-icon-3\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                    <rect opacity=\"0.25\" x=\"3\" y=\"21\" width=\"18\" height=\"2\" rx=\"1\" fill=\"#191213\" />\r\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.08576 11.5L3.58579 12C3.21071 12.375 3 12.8838 3 13.4142V17C3 18.1045 3.89543 19 5 19H8.58579C9.11622 19 9.62493 18.7893 10 18.4142L10.5 17.9142L4.08576 11.5Z\" fill=\"#121319\" />\r\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.5 10.0858L11.5858 4L18 10.4142L11.9142 16.5L5.5 10.0858Z\" fill=\"#121319\" />\r\n                                                    <path opacity=\"0.25\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.1214 1.70705C16.9498 0.535476 15.0503 0.535476 13.8787 1.70705L13 2.58576L19.4142 8.99997L20.2929 8.12126C21.4645 6.94969 21.4645 5.0502 20.2929 3.87862L18.1214 1.70705Z\" fill=\"#191213\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { Button } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport {toAbsoluteUrl} from '../../../../_metronic/helpers'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useAuth } from '../../auth';\r\nimport { adminUserUpdate } from '../api';\r\n\r\nconst adminUserDetailsSchema = Yup.object().shape({\r\n    firstname: Yup.string().required('First Name is required'),\r\n    lastname: Yup.string().required('Last Name is required'),\r\n    email: Yup.string()\r\n      .email('Wrong email format')\r\n      .min(3, 'Minimum 3 symbols')\r\n      .max(50, 'Maximum 50 symbols')\r\n      .required('Email is required'),\r\n    mobileNumber: Yup.string()\r\n      .min(14, 'Minimum 10 numbers')\r\n      .max(14, 'Maximum 10 numbers')\r\n      .required('Mobile number is required')\r\n})\r\n\r\ninterface AdminUserDetailModel {\r\n    firstname: string\r\n    lastname: string\r\n    email: string\r\n    mobileNumber: string\r\n}\r\n\r\nexport const UserUpdateWithAddress = (props: any) => {\r\n    const navigate = useNavigate()\r\n    const {currentUser} = useAuth()\r\n    const [companyId] = useState(currentUser?.companyId)\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [image, setImage] = useState<any>(\"\")\r\n    const [role, setRole] = useState<string>('')\r\n    const [userMobNumb, setUserMobNumb] = useState<any>('')\r\n    const [compPhoneNumb, setCompPhoneNumb] = useState<any>(currentUser?.phoneNumber)\r\n\r\n    const initialValues: AdminUserDetailModel = {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        mobileNumber: ''\r\n    }\r\n\r\n    const handleImageChange = (e: any) => {\r\n        setImage(e.target.files[0])\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: adminUserDetailsSchema,\r\n        onSubmit: (values) => {\r\n            setLoading(true)\r\n            setTimeout(() => {\r\n                const formData = new FormData()\r\n                formData.append('userId', props.userID)\r\n                formData.append('companyId', companyId ? companyId.toString() : '')\r\n                formData.append('firstname', values.firstname)\r\n                formData.append('lastname', values.lastname)\r\n                formData.append('email', values.email)\r\n                formData.append('mobileNumber', values.mobileNumber)\r\n                formData.append('role', role)\r\n                formData.append('image', image)\r\n\r\n                adminUserUpdate(formData)\r\n                .then((response) => {\r\n                    if(response.data.success) {\r\n                        props.setUserDetail((oldUserData: any) => {\r\n                            let newUserData = oldUserData\r\n                            newUserData.firstname = response.data.userData.firstname\r\n                            newUserData.lastname = response.data.userData.lastname\r\n                            newUserData.email = response.data.userData.email\r\n                            newUserData.mobileNumber = response.data.userData.mobileNumber\r\n                            newUserData.avatarName = response.data.userData.avatarName\r\n                            newUserData.role = response.data.userData.role\r\n\r\n                            return newUserData\r\n                        })\r\n                        props.setSuccessResMessage(response.data.message)\r\n                        props.setChecked(true)\r\n                        setLoading(false)\r\n                    } else {\r\n                        props.setChecked(true)\r\n                        props.setFailureResMessage(response.data.message)\r\n                        setLoading(false)\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    props.setShowUserUpdateDialog(false)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    props.setChecked(true)\r\n                    props.setFailureResMessage('Failed to update user, try again later')\r\n                    props.setShowUserUpdateDialog(false)\r\n                    setLoading(false)\r\n                })\r\n            }, 1000)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        formik.setFieldValue('mobileNumber', userMobNumb)\r\n    }, [userMobNumb])\r\n    \r\n    \r\n    const handlePhoneNumberChange = (e: any, numbertype: 'Company' | 'Mobile') => {\r\n        if(numbertype == 'Company') {\r\n          const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n          setCompPhoneNumb(formattedPhoneNumber);\r\n        } else {\r\n          const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n          setUserMobNumb(formattedPhoneNumber);\r\n        }\r\n    }\r\n    \r\n    const formatPhoneNumber = (value: string) => {\r\n        if (!value) return value;\r\n      \r\n        const phoneNumber = value.replace(/[^\\d]/g, '');\r\n      \r\n        const phoneNumberLength = phoneNumber.length;\r\n      \r\n        if (phoneNumberLength < 4) return phoneNumber;\r\n    \r\n        if (phoneNumberLength < 7) {\r\n          return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n        }\r\n      \r\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\r\n          3,\r\n          6\r\n        )}-${phoneNumber.slice(6, 10)}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.userDetail) {\r\n          formik.setFieldValue('firstname', props.userDetail.firstname)\r\n          formik.setFieldValue('lastname', props.userDetail.lastname)\r\n          formik.setFieldValue('email', props.userDetail.email)\r\n          formik.setFieldValue('mobileNumber', props.userDetail.mobileNumber)\r\n          setRole(props.userDetail.role)\r\n        }\r\n    }, [props.userDetail])\r\n\r\n    return (\r\n        <>\r\n            <Dialog \r\n                open={props.showUserUpdateDialog} \r\n                onClose={() => props.setShowUserUpdateDialog(false)} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">\r\n                    <div className=\"modal-header\" id=\"kt_modal_update_user_header\">\r\n                        <h2 className=\"fw-bolder\">\r\n                            Update User\r\n                        </h2>\r\n                        <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" onClick={() => props.setShowUserUpdateDialog(false)}>\r\n                            <span className=\"svg-icon svg-icon-1\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n                                        <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                        <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                    </g>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form style={{ width: '380px' }} className=\"form\" onSubmit={formik.handleSubmit} id=\"kt_modal_update_user_form\">\r\n                        <div \r\n                            className=\"modal-body px-5\"\r\n                        >\r\n                            <div className=\"d-flex flex-column scroll-y me-n7 pe-7\" id=\"kt_modal_update_user_scroll\" data-kt-scroll=\"true\" data-kt-scroll-activate=\"{default: false, lg: true}\" data-kt-scroll-max-height=\"auto\" data-kt-scroll-dependencies=\"#kt_modal_update_user_header\" data-kt-scroll-wrappers=\"#kt_modal_update_user_scroll\" data-kt-scroll-offset=\"300px\">\r\n                                <div id=\"kt_modal_update_user_user_info\" className=\"show\">\r\n                                    <div className=\"mb-7\">\r\n                                        <label className=\"fs-6 fw-bold mb-2 me-5\">\r\n                                            <span>\r\n                                                Update Avatar\r\n                                            </span>\r\n                                            <i className=\"fas fa-exclamation-circle ms-1 fs-7\" data-bs-toggle=\"tooltip\" title=\"Allowed file types: png, jpg, jpeg.\"></i>\r\n                                        </label>\r\n                                        <div className=\"mt-5\">\r\n                                            <div className=\"image-input image-input-outline\" data-kt-image-input=\"true\" style={{backgroundImage: `url(${toAbsoluteUrl('/media/avatars/blank.png')})`, marginLeft: '5px'}}>\r\n                                                <div \r\n                                                    className=\"image-input-wrapper w-125px h-125px\" \r\n                                                    style={{backgroundImage: `url(${image === \"\" ? `${process.env.REACT_APP_API_USER_IMAGE_URL}/${props.userDetail.avatarName}` : URL.createObjectURL(image)})`}}\r\n                                                ></div>\r\n                                                <label className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"change\" data-bs-toggle=\"tooltip\" title=\"Change avatar\">\r\n                                                    <i className=\"bi bi-pencil-fill fs-7\"></i>\r\n                                                    <input onChange={(e) => handleImageChange(e)} type=\"file\" name=\"avatar\" accept=\".png, .jpg, .jpeg\" />\r\n                                                    <input type=\"hidden\" name=\"avatar_remove\" />\r\n                                                </label>\r\n                                                <span className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"cancel\" data-bs-toggle=\"tooltip\" title=\"Cancel avatar\">\r\n                                                    <i className=\"bi bi-x fs-2\"></i>\r\n                                                </span>\r\n                                                <span className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"remove\" data-bs-toggle=\"tooltip\" title=\"Remove avatar\">\r\n                                                    <i className=\"bi bi-x fs-2\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            First Name\r\n                                        </label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"First Name\" \r\n                                            {...formik.getFieldProps('firstname')}\r\n                                        />\r\n                                        {formik.touched.firstname && formik.errors.firstname && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.firstname}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            Last Name\r\n                                        </label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"Last Name\" \r\n                                            {...formik.getFieldProps('lastname')}\r\n                                        />\r\n                                        {formik.touched.lastname && formik.errors.lastname && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.lastname}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            Mobile Number\r\n                                        </label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"Mobile Number\" \r\n                                            {...formik.getFieldProps('mobileNumber')}\r\n                                            onChange={(e) => handlePhoneNumberChange(e, 'Mobile')}\r\n                                        />\r\n                                        {formik.touched.mobileNumber && formik.errors.mobileNumber && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.mobileNumber}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            <span>Email</span>\r\n                                            <i className=\"fas fa-exclamation-circle ms-1 fs-7\" data-bs-toggle=\"tooltip\" title=\"Email address must be active\"></i>\r\n                                        </label>\r\n                                        <input \r\n                                            type=\"email\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"Email\" \r\n                                            {...formik.getFieldProps('email')}\r\n                                        />\r\n                                        {formik.touched.email && formik.errors.email && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.email}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/*begin::Form Group */}\r\n                                    <div className='fv-row mb-8'>\r\n                                        <label className='form-label fw-bold text-dark fs-6'>User Role</label>\r\n                                        <div>\r\n                                            {/*begin:Option */}\r\n                                            <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                                                <span className='d-flex align-items-center me-2'>\r\n                                                    <span className='d-flex flex-column'>\r\n                                                        <span className='fw-bold text-muted fs-6'>Administrator</span>\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                                <span className='form-check form-check-custom form-check-solid'>\r\n                                                    <input\r\n                                                        className='form-check-input'\r\n                                                        type='radio'\r\n                                                        name='orgType'\r\n                                                        value='Administrator'\r\n                                                        checked={role == '1'}\r\n                                                        onChange={() => setRole('1')}\r\n                                                    />\r\n                                                </span>\r\n                                            </label>\r\n                                            {/*end::Option */}\r\n\r\n                                            {/*begin:Option */}\r\n                                            <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                                                <span className='d-flex align-items-center me-2'>\r\n                                                    <span className='d-flex flex-column'>\r\n                                                        <span className='fw-bold text-muted fs-6'>User</span>\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                                <span className='form-check form-check-custom form-check-solid'>\r\n                                                    <input\r\n                                                        className='form-check-input'\r\n                                                        type='radio'\r\n                                                        name='orgType'\r\n                                                        value='User'\r\n                                                        checked={role == '2'}\r\n                                                        onChange={() => setRole('2')}\r\n                                                    />\r\n                                                </span>\r\n                                            </label>\r\n                                            {/*end::Option */}\r\n\r\n                                            {/*begin:Option */}\r\n                                            <label className='d-flex align-items-center justify-content-between mb-6 cursor-pointer'>\r\n                                                <span className='d-flex align-items-center me-2'>\r\n                                                    <span className='d-flex flex-column'>\r\n                                                        <span className='fw-bold text-muted fs-6'>View Only</span>\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                                <span className='form-check form-check-custom form-check-solid'>\r\n                                                    <input\r\n                                                        className='form-check-input'\r\n                                                        type='radio'\r\n                                                        name='orgType'\r\n                                                        value='View Only'\r\n                                                        checked={role == '3'}\r\n                                                        onChange={() => setRole('3')}\r\n                                                    />\r\n                                                </span>\r\n                                            </label>\r\n                                            {/*end::Option */}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer flex-center\">\r\n                            <button \r\n                                type=\"reset\" \r\n                                className=\"btn btn-light me-3\" \r\n                                onClick={() => props.setShowUserUpdateDialog(false)}\r\n                            >\r\n                                Discard\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <span className=\"indicator-label\">Submit</span>\r\n                                {loading &&\r\n                                    <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import {FormattedMessage} from 'react-intl'\r\nimport { KTIcon } from '../../../../_metronic/helpers'\r\nimport { enableUser2FAOptionForAdmin, disableUser2FAOptionForAdmin } from '../api'\r\nimport { useState } from 'react'\r\n\r\nexport const TwoFactorAuthCard =  (props: any) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const enableUser2FA = () => {\r\n        enableUser2FAOptionForAdmin(props.userID)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n                props.setUserDetail((user: any) => {\r\n                    let updated = user\r\n                    updated.twoFactorAuth = true\r\n                    return updated\r\n                })\r\n                props.setSuccessResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setLoading(false)\r\n            } else {\r\n                props.setFailureResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setLoading(false)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            props.setFailureResMessage('Failed to enable 2FA due to internal error')\r\n            props.setChecked(true)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const disableUser2FA = () => {\r\n        disableUser2FAOptionForAdmin(props.userID)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n                props.setUserDetail((user: any) => {\r\n                    let updated = user\r\n                    updated.twoFactorAuth = false\r\n                    return updated\r\n                })\r\n                props.setSuccessResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setLoading(false)\r\n            } else {\r\n                props.setFailureResMessage(response.data.message)\r\n                props.setChecked(true)\r\n                setLoading(false)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            props.setFailureResMessage('Failed to disable 2FA due to internal error')\r\n            props.setChecked(true)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card pt-4 pb-6 mb-xl-9\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">\r\n                        <h2>Two Factor Authentication</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body pt-0 pb-5\">\r\n                <div className='notice d-flex bg-light-primary rounded border-primary border border-dashed p-6'>\r\n                    <KTIcon iconName='shield-tick' className='fs-2tx text-primary me-4' />\r\n                    <div className='d-flex flex-stack flex-grow-1 flex-wrap flex-md-nowrap'>\r\n                        <div className='mb-3 mb-md-0 fw-bold'>\r\n                            <h4 className='text-gray-800 fw-bolder'>Secure User Account</h4>\r\n                            <div className='fs-6 text-gray-600 pe-7'>\r\n                                Two-factor authentication adds an extra layer of security to the user accounts. To log\r\n                                in, in addition, the user needs to provide a 4 digit code\r\n                            </div>\r\n                        </div>\r\n\r\n                        {props.userDetail.twoFactorAuth && \r\n                            <button\r\n                                className='btn btn-secondary me-2 px-6'\r\n                                onClick={() => disableUser2FA()}\r\n                            >\r\n                                Disable\r\n                            </button>\r\n                        }\r\n                        {!props.userDetail.twoFactorAuth && \r\n                            <button\r\n                                className='btn btn-primary me-2 px-6'\r\n                                onClick={() => enableUser2FA()}\r\n                            >\r\n                                Enable\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport {FormattedMessage} from 'react-intl'\r\nimport { adminUserPasswordUpdate } from '../api';\r\n\r\nconst passwordFormValidationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(8, 'Minimum 8 characters')\r\n      .max(50, 'Maximum 50 characters')\r\n      .required('Password is required'),\r\n    changepassword: Yup.string()\r\n      .min(8, 'Minimum 8 characters')\r\n      .max(50, 'Maximum 50 characters')\r\n      .required('Password confirmation is required')\r\n      .oneOf([Yup.ref('newPassword')], \"Password and Confirm Password didn't match\")\r\n})\r\n\r\ninterface PasswordChangeModel {\r\n    newPassword: string\r\n    changepassword: string\r\n}\r\n\r\nconst initialValues: PasswordChangeModel = {\r\n    newPassword: '',\r\n    changepassword: ''\r\n}\r\n\r\nexport const UpdatePassword = (props: any) => {\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: passwordFormValidationSchema,\r\n        onSubmit: (values) => {\r\n            setLoading(true)\r\n            setTimeout(() => {\r\n                adminUserPasswordUpdate(\r\n                    props.userID,\r\n                    values.newPassword\r\n                )\r\n                .then((response) => {\r\n                    if(response.data.success) {\r\n                        props.setSuccessResMessage(response.data.message)\r\n                        props.setChecked(true)\r\n                        setLoading(false)\r\n                    } else {\r\n                        props.setChecked(true)\r\n                        props.setFailureResMessage(response.data.message)\r\n                        setLoading(false)\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    props.setShowPasswordUpdateDialog(false)\r\n                })\r\n                .catch((err) => {\r\n                    props.setChecked(true)\r\n                    props.setFailureResMessage('Failed to update user, try again later')\r\n                    props.setShowPasswordUpdateDialog(false)\r\n                    setLoading(false)\r\n                }) \r\n            }, 1000)\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <Dialog \r\n                open={props.showPasswordUpdateDialog} \r\n                onClose={() => props.setShowPasswordUpdateDialog(false)} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"fw-bolder\">Update Password</h2>\r\n                        <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" onClick={() => props.setShowPasswordUpdateDialog(false)}>\r\n                            <span className=\"svg-icon svg-icon-1\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n                                        <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                        <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                    </g>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form\r\n                        id=\"kt_modal_update_password_form\" className=\"form\" \r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-10 fv-row\" data-kt-password-meter=\"true\">\r\n                            <div className=\"mb-1\">\r\n                                <label className=\"required form-label fw-bold fs-6 mb-2\">New Password</label>\r\n                                <div className=\"position-relative mb-3\">\r\n                                    <input \r\n                                        className=\"form-control form-control-lg form-control-solid\" \r\n                                        type=\"password\" \r\n                                        placeholder=\"New Password\" \r\n                                        autoComplete=\"off\" \r\n                                        {...formik.getFieldProps('newPassword')}\r\n                                    />\r\n                                    {formik.touched.newPassword && formik.errors.newPassword && (\r\n                                        <div className='fv-plugins-message-container'>\r\n                                            <div className='fv-help-block text-danger'>{formik.errors.newPassword}</div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-muted\">Use 8 or more characters with a mix of letters, numbers &amp; symbols.</div>\r\n                        </div>\r\n                        <div className=\"fv-row mb-10\">\r\n                            <label className=\"required form-label fw-bold fs-6 mb-2\">Confirm Password</label>\r\n                            <input \r\n                                className=\"form-control form-control-lg form-control-solid\" \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm Password\" \r\n                                autoComplete=\"off\"\r\n                                {...formik.getFieldProps('changepassword')}\r\n                            />\r\n                            {formik.touched.changepassword && formik.errors.changepassword && (\r\n                                <div className='fv-plugins-message-container'>\r\n                                    <div className='fv-help-block text-danger'>{formik.errors.changepassword}</div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"text-center\">\r\n                            <button \r\n                                type=\"reset\" \r\n                                className=\"btn btn-light me-3\" \r\n                                onClick={() => props.setShowPasswordUpdateDialog(false)}\r\n                            >\r\n                                Discard\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <span className=\"indicator-label\">Submit</span>\r\n                                {loading &&\r\n                                    <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport {UserSummary} from './components/UserSummary'\r\nimport {UserUpdateCard} from './components/UserUpdateCard'\r\nimport {UserUpdateWithAddress} from './components/UserUpdateWithAddress'\r\nimport { TwoFactorAuthCard } from './components/TwoFactorAuthCard'\r\nimport { UpdatePassword } from './components/UpdatePasswordDialog'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { CircularProgress } from '@mui/material'\r\nimport { blacklistUserAccount, getUserDetailForAdmin, whitelistUserAccount } from './api'\r\nimport { AlertDanger, AlertSuccess } from '../alerts/Alerts'\r\nimport { useAuth } from '../auth'\r\n\r\n\r\nconst UserDetailPage = (props: any) => {\r\n\r\n    const {state} = useLocation();\r\n    const userID = state;\r\n    const [checked, setChecked] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [processing, setProcessing] = useState(false);\r\n\r\n    const [userDetail, setUserDetail] = useState<any>(null)\r\n\r\n    const [showUserUpdateDialog, setShowUserUpdateDialog] = useState<boolean>(false)\r\n    const [showPasswordUpdateDialog, setShowPasswordUpdateDialog] = useState<boolean>(false)\r\n\r\n    const successMsg = localStorage.getItem('resSuccess')\r\n    const [resSuccessMessage, setResSuccessMessage] = useState<string | null>(successMsg)\r\n\r\n    const failureMsg = localStorage.getItem('resFailure')\r\n    const [resFailureMessage, setResFailureMessage] = useState<string | null>(failureMsg)\r\n\r\n    const [successResMessage, setSuccessResMessage] = useState<string>('')\r\n    const [failureResMessage, setFailureResMessage] = useState<string>('')\r\n    const [checked1, setChecked1] = useState<boolean>(true)\r\n\r\n    const {auth} = useAuth()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if(auth?.user?.role != 1) {\r\n            navigate('/error/404')\r\n        }\r\n    }, [])\r\n\r\n    if(resSuccessMessage !== null && resSuccessMessage !== undefined) {\r\n        setTimeout(() => {\r\n          setChecked(false);\r\n          localStorage.removeItem('resSuccess')\r\n          setTimeout(() => {\r\n            setResSuccessMessage(null);\r\n          }, 300);\r\n        }, 5000);\r\n    }\r\n    \r\n    if(resFailureMessage !== null && resFailureMessage !== undefined) {\r\n        setTimeout(() => {\r\n            setChecked(false);\r\n            localStorage.removeItem('resFailure')\r\n            setTimeout(() => {\r\n                setResFailureMessage(null);\r\n            }, 300);\r\n        }, 5000);\r\n    }\r\n\r\n    if(successResMessage) {\r\n        setTimeout(() => {\r\n            setChecked(false)\r\n            setTimeout(() => {\r\n                setSuccessResMessage(\"\");\r\n            }, 200);\r\n        }, 5000);\r\n    }\r\n    \r\n    if(failureResMessage) {\r\n        setTimeout(() => {\r\n            setChecked(false)\r\n            setTimeout(() => {\r\n                setFailureResMessage(\"\");\r\n            }, 200);\r\n        }, 5000);\r\n    }\r\n\r\n    const openDialogForUserDeletion = (id: string) => {\r\n        const element: HTMLElement = document.getElementById(id)!\r\n        element.style.display='block'\r\n    }\r\n    \r\n    const closeDialogForUserDeletion = (id: string) => {\r\n        const element: HTMLElement = document.getElementById(id)!\r\n        element.style.display='none'\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserDetailForAdmin(userID)\r\n        .then((response) => {\r\n            setUserDetail(response.data.userData)\r\n            setLoading(false)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    const blacklistUser = () => {\r\n        setProcessing(true)\r\n        blacklistUserAccount(userID)\r\n        .then((res) => {\r\n            if(res.data.success) {\r\n                setUserDetail((user: any) => {\r\n                    let updated = user\r\n                    updated.accountBlocked = true\r\n                    return updated\r\n                })\r\n                setSuccessResMessage(res.data.message)\r\n                setChecked(true)\r\n                setProcessing(false)\r\n            } else {\r\n                setFailureResMessage(res.data.message)\r\n                setChecked(true)\r\n                setProcessing(false)\r\n            }\r\n        })\r\n        .then(() => {\r\n            closeDialogForUserDeletion(`delete-user-${userID}`)\r\n            window.scrollTo(0,0)\r\n        })\r\n        .catch((err) => {\r\n            setFailureResMessage('Failed to blacklist user account due to internal error')\r\n            setChecked(true)\r\n            setProcessing(false)\r\n            closeDialogForUserDeletion(`delete-user-${userID}`)\r\n            window.scrollTo(0,0)\r\n        })\r\n    }\r\n\r\n    const whitelistUser = () => {\r\n        setProcessing(true)\r\n        whitelistUserAccount(userID)\r\n        .then((res) => {\r\n            if(res.data.success) {\r\n                setUserDetail((user: any) => {\r\n                    let updated = user\r\n                    updated.accountBlocked = false\r\n                    return updated\r\n                })\r\n                setSuccessResMessage(res.data.message)\r\n                setChecked(true)\r\n                setProcessing(false)\r\n            } else {\r\n                setFailureResMessage(res.data.message)\r\n                setChecked(true)\r\n                setProcessing(false)\r\n            }\r\n        })\r\n        .then(() => {\r\n            closeDialogForUserDeletion(`undelete-user-${userID}`)\r\n            window.scrollTo(0,0)\r\n        })\r\n        .catch((err) => {\r\n            setFailureResMessage('Failed to whitelist user account due to internal error')\r\n            setChecked(true)\r\n            setProcessing(false)\r\n            closeDialogForUserDeletion(`undelete-user-${userID}`)\r\n            window.scrollTo(0,0)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            {successResMessage !== undefined && successResMessage !== null && successResMessage !== \"\" ? (\r\n                <AlertSuccess message={successResMessage} checked={checked} />\r\n            ) : null }\r\n\r\n            {failureResMessage !== undefined && failureResMessage !== null && failureResMessage !== \"\" ? (\r\n                <AlertDanger message={failureResMessage} checked={checked} />\r\n            ) : null }\r\n\r\n            {resSuccessMessage !== null && resSuccessMessage !== undefined && resSuccessMessage !== \"\"  ? (\r\n                <AlertSuccess message={resSuccessMessage} checked={checked1} />\r\n            ) : null}\r\n\r\n            {resFailureMessage !== null && resFailureMessage !== undefined && resFailureMessage !== \"\"  ? (\r\n                <AlertDanger message={resFailureMessage} checked={checked1} />\r\n            ) : null}\r\n            \r\n           {!loading && \r\n                <div className=\"post d-flex flex-column-fluid\" id=\"kt_post\">\r\n                    <div id=\"kt_content_container\" className=\"container\">\r\n                        <div className=\"d-flex flex-column flex-xl-row\">\r\n                            <div className=\"flex-column flex-lg-row-auto w-100 w-xl-400px mb-10\">\r\n                                <UserSummary \r\n                                    userID={userID} \r\n                                    showUserUpdateDialog={showUserUpdateDialog}\r\n                                    setShowUserUpdateDialog={setShowUserUpdateDialog}\r\n                                    userDetail={userDetail}\r\n                                    setUserDetail={setUserDetail}\r\n                                    setSuccessResMessage={setSuccessResMessage}\r\n                                    setFailureResMessage={setFailureResMessage}\r\n                                    setChecked={setChecked}\r\n                                    openDialogForUserDeletion={openDialogForUserDeletion}\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex-lg-row-fluid ms-lg-15\">\r\n                                <div className=\"tab-content\" id=\"myTabContent\">\r\n                                    <div className=\"tab-pane show active\" id=\"kt_user_view_overview_security\" role=\"tabpanel\">\r\n                                        <UserUpdateCard \r\n                                            showPasswordUpdateDialog={showPasswordUpdateDialog}\r\n                                            setShowPasswordUpdateDialog={setShowPasswordUpdateDialog}\r\n                                        />\r\n                                        <TwoFactorAuthCard \r\n                                            userID={userID}\r\n                                            userDetail={userDetail}\r\n                                            setUserDetail={setUserDetail}\r\n                                            setSuccessResMessage={setSuccessResMessage}\r\n                                            setFailureResMessage={setFailureResMessage}\r\n                                            setChecked={setChecked}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id={`delete-user-${userID}`} style={{ display: 'none' }} className=\"modal\">\r\n                                <span onClick={() => closeDialogForUserDeletion(`delete-user-${userID}`)} className=\"close\" title=\"Close Modal\">&times;</span>\r\n                                <form className=\"modal-content bg-white\">\r\n                                    <div className=\"px-7 py-7\">\r\n                                        <h3>\r\n                                            Mark account for deletion\r\n                                        </h3>\r\n                                        <p className='font-size-15'>\r\n                                            Are you sure that you want to mark this account for deletion?\r\n                                        </p>\r\n        \r\n                                        <div className=\"d-flex\">\r\n                                            <button onClick={() => closeDialogForUserDeletion(`delete-user-${userID}`)} type=\"button\" className=\"btn btn-primary\">\r\n                                                Cancel\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => blacklistUser()} \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-danger ms-3\"\r\n                                            >\r\n                                                Delete\r\n                                                {processing && <span className='spinner-border spinner-border-sm align-middle ms-2'></span>}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div id={`undelete-user-${userID}`} style={{ display: 'none' }} className=\"modal\">\r\n                                <span onClick={() => closeDialogForUserDeletion(`undelete-user-${userID}`)} className=\"close\" title=\"Close Modal\">&times;</span>\r\n                                <form className=\"modal-content bg-white\">\r\n                                    <div className=\"px-7 py-7\">\r\n                                        <h3>\r\n                                            Unmark account from deletion\r\n                                        </h3>\r\n                                        <p className='font-size-15'>\r\n                                            Are you sure that you want to unmark this account from deletion?\r\n                                        </p>\r\n        \r\n                                        <div className=\"d-flex\">\r\n                                            <button onClick={() => closeDialogForUserDeletion(`undelete-user-${userID}`)} type=\"button\" className=\"btn btn-secondary\">\r\n                                                Cancel\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => whitelistUser()} \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-primary ms-3\"\r\n                                            >\r\n                                                Unmark\r\n                                                {processing && <span className='spinner-border spinner-border-sm align-middle ms-2'></span>}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <UserUpdateWithAddress \r\n                            userID={userID} \r\n                            showUserUpdateDialog={showUserUpdateDialog}\r\n                            setShowUserUpdateDialog={setShowUserUpdateDialog}\r\n                            userDetail={userDetail}\r\n                            setUserDetail={setUserDetail}\r\n                            setSuccessResMessage={setSuccessResMessage}\r\n                            setFailureResMessage={setFailureResMessage}\r\n                            setChecked={setChecked}\r\n                        />\r\n                        <UpdatePassword \r\n                            userID={userID}\r\n                            showPasswordUpdateDialog={showPasswordUpdateDialog}\r\n                            setShowPasswordUpdateDialog={setShowPasswordUpdateDialog}\r\n                            setSuccessResMessage={setSuccessResMessage}\r\n                            setFailureResMessage={setFailureResMessage}\r\n                            setChecked={setChecked}\r\n                        />\r\n                    </div>\r\n                </div>\r\n           } \r\n\r\n           {loading && \r\n                <div className='d-flex w-100 h-100'>\r\n                    <div className='my-auto mx-auto'>\r\n                        <div className='d-flex flex-column justify-content-center'>\r\n                            <span className='text-primary fs-3'>Loading</span> <br />\r\n                            <span className='ms-4'>\r\n                                <CircularProgress />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetailPage"],"names":["roleToIdMap","UserSummary","props","useState","className","src","process","userDetail","avatarName","alt","xmlns","xmlnsXlink","width","height","viewBox","version","stroke","strokeWidth","fill","fillRule","points","d","transform","onClick","setShowUserUpdateDialog","id","firstname","lastname","email","accountStatus","title","mobileNumber","role","toString","accountBlocked","openDialogForUserDeletion","userID","UserUpdateCard","type","setShowPasswordUpdateDialog","opacity","x","y","rx","clipRule","adminUserDetailsSchema","Yup","shape","required","min","max","UserUpdateWithAddress","useNavigate","currentUser","useAuth","companyId","loading","setLoading","image","setImage","setRole","userMobNumb","setUserMobNumb","phoneNumber","setCompPhoneNumb","formik","useFormik","initialValues","validationSchema","onSubmit","values","setTimeout","formData","FormData","append","adminUserUpdate","then","response","data","success","setUserDetail","oldUserData","newUserData","userData","setSuccessResMessage","message","setChecked","setFailureResMessage","catch","err","console","log","useEffect","setFieldValue","formatPhoneNumber","value","replace","phoneNumberLength","length","slice","Dialog","open","showUserUpdateDialog","onClose","DialogTitle","DialogContent","style","handleSubmit","backgroundImage","toAbsoluteUrl","marginLeft","URL","createObjectURL","onChange","e","target","files","handleImageChange","name","accept","placeholder","getFieldProps","touched","errors","numbertype","formattedPhoneNumber","handlePhoneNumberChange","checked","TwoFactorAuthCard","iconName","twoFactorAuth","disableUser2FAOptionForAdmin","user","updated","enableUser2FAOptionForAdmin","passwordFormValidationSchema","newPassword","changepassword","oneOf","UpdatePassword","adminUserPasswordUpdate","showPasswordUpdateDialog","autoComplete","useLocation","state","processing","setProcessing","successMsg","localStorage","getItem","resSuccessMessage","setResSuccessMessage","failureMsg","resFailureMessage","setResFailureMessage","successResMessage","failureResMessage","checked1","auth","navigate","undefined","removeItem","closeDialogForUserDeletion","document","getElementById","display","getUserDetailForAdmin","blacklistUserAccount","res","window","scrollTo","whitelistUserAccount","CircularProgress"],"sourceRoot":""}